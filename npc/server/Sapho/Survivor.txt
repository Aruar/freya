//===== eAthena Script =======================================
//= Spawn Survivor de Sapho
//===== Par: =================================================
//= Garion, GAlion, DaVinci, Jondalar, Kheldar, Yor
//===== Current Version: =====================================
//= 3.6
//===== Compatible With: =====================================
//= Freya
//===== Description: =========================================
//= Evénement spawnant des monstres jusqu'à ce qu'il ne reste
//=   un seul et unique joueur en vie.
//===== Commentaires: ========================================
//= 2.8  Nettoyage commentaires et logs.
//=      Modification calcul augmentation nombre de monstres
//=        lors d'un nouveau spawn.
//=      Spawner moins de monstre pour patienter avant l'event
//=      Meilleur affichage du temps restant pour se rendre à
//=        l'arène (dans les informations).
//=      Affichage du temps écoulé concernant l'event en cours
//=        (dans les informations).
//=      Au début, nombre de monstres minimum: 50.
//=      Limite au moment des spawns: 50 <= x <= 300. Cela ne
//=        change pas le nombre de monstres dans les
//=        ajouts/soustractions en fonction du nombre de morts
//=        et/ou de l'efficacité des joueurs.
//=      Réduire le nombre de spawns si les joueurs tuent trop
//=        lentement les monstres.
//=      Indication du dernier monstre spawné (dans les
//=        informations).
//= 2.9  Event tous les jours à 06h00.
//=      Minimum/maximum de monstres: 50-300 -> 40-200.
//=      Réduire le nombre de monstres de 3 au lieu de 2 pour
//=        chaque mort.
//=      A mi-temps, ne spawner que 50% du nombre habituel de
//=        monstres.
//=      Avant l'event, ajout de quelques shining plants.
//=      Ajout de la liste des 10 derniers gagnants (basé sur
//=        le travail de GAlion).
//= 2.10 Guérison automatique sur les warps de sortie.
//=      Lors de spawn de shining plants, la quantité est
//=        fixe: 2 fois le nombre de joueurs présents.
//=      La chance de spawner des shining plants passe de 20%
//=        à 33%.
//=      Lorsqu'un event est en cours et qu'un GM essaye d'en
//=        activer un, le type ne change plus.
//=      Lorsque le nombre de monstres vivants est trop
//=        important au spawn suivant, la quantité est réduite
//=        de 12,5% (au lieu de 10%).
//=      Réduction d'une ligne des pavés de messages.
//= 2.11 Correction nom des warps et position des warps.
//=      Affichages des gagnants en fonction du type de spawn.
//=      S'il reste beaucoup de monstres à un spawn (80%),
//=        réduire de 10% le nombre de spawn.
//= 3.0  Réduction du nombre de porings avant l'event.
//=      Ne spawner les monstres à mi-temps qu s'il reste
//=        moins de 20% des monstres et non plus moins de 25%.
//=      Réduction du nombre de monstres en mi-temps (25%).
//=      L'heure des Spawn Survivor automatisés indique le
//=        début de l'event, et pas de l'avant-event.
//=      Ajout d'un message 15 ou 20 secondes avant le
//=        prochain spawn.
//= 3.1  Au spawn, lorsqu'il ne reste qu'un seul joueur, on
//=        spawn en plus des porings pour que le joueur puisse
//=        gagner plus facilement.
//=      Idem lors du dernier spawn.
//=      Gain: 750 fois le numéro de la dernière vague.
//= 3.2  Les novices sont exclus du du Spawn Survivor. L'usage
//=        de act dead/trick dead bloque l'event.
//= 3.3  Mise en place de 10 thief bugs females en permanence
//=        à partir du spawn 10 (Nettoyeur).
//= 3.4  Mise en place de 2 thief bugs males en permanence à
//=        partir du spawn 10 (Nettoyeur).
//= 3.5  Explication de l'événement dans les règles.
//= 3.6  Dans les calculs du nombre de monstres, ne pas tenir
//=        compte des monstres permanents (nettoyeurs).
//=      Mise en place de 5 porings en permanence pour aider
//=        les joueurs à finir (le dernier, même un healer,
//=        peut tuer un poring). Suppression des autres spawn
//=        de porings servant à cet usage précédemment.
//=      Réduction du nombre de monstres avant-event.
//============================================================

// les Warps
// ---------
guild_vs5.gat,50,76,4	script	warprep	45,2,2,{
OnTouch:
	percentheal 100,100; // Soin automatique des joueurs à la sortie de l'arène
	warp "prontera.gat",165,151;
	end;
}
guild_vs5.gat,78,49,4	script	warprep2	45,2,2,{
OnTouch:
	percentheal 100,100; // Soin automatique des joueurs à la sortie de l'arène
	warp "prontera.gat",165,151;
	end;
}
guild_vs5.gat,49,23,4	script	warprep3	45,2,2,{
OnTouch:
	percentheal 100,100; // Soin automatique des joueurs à la sortie de l'arène
	warp "prontera.gat",165,151;
	end;
}
guild_vs5.gat,20,50,4	script	warprep4	45,2,2,{
OnTouch:
	percentheal 100,100; // Soin automatique des joueurs à la sortie de l'arène
	warp "prontera.gat",165,151;
	end;
}

prontera.gat,178,148,4	script	warpspawn	45,2,2,{
OnTouch:
	if(getgmlevel(0)== 0) goto L_noss;
	if(Class == Job_Novice) goto L_Novice;
	percentheal 100,100; // Soin automatique des joueurs à l'entrée de l'arène
	warp "guild_vs5",56,49;
	end;

L_noss:
	mes "[GM Team]";
	mes "Vous n'avez pas le droit de participer au Spawn Survivor.";
	mes "L'accés est autorisé aux joueurs respectant les régles du serveur.";
	mes "Au revoir.";
	close;

L_Novice: // L'usage de act dead/trick dead bloque l'event.
	mes "[GM Team]";
	mes "Vous n'avez pas le droit de participer au Spawn Survivor.";
	mes "Nous ne voulons pas mettre en péril votre vie.";
	next;
	mes "[GM Team]";
	mes "L'accés est réservé aux joueurs expérimentés.";
	mes "Vous êtes toujours en apprentissage.";
	mes "Au revoir.";
	close;
}


// Fonction enregistrant le scrore d'un Master Survivor
// ----------------------------------------------------
function	script	Record_spawn	{
	// Nécessite 1 liste permanente de 10 var: $spawn_rec_n$

	// Décalage des 9 précédents
	set $@i_spawn, 10;
	goto Boucle;

Boucle:
	if ($@spawn_type == 1) set $spawn_rec_1$[$@i_spawn],$spawn_rec_1$[$@i_spawn - 1];
	if ($@spawn_type == 2) set $spawn_rec_2$[$@i_spawn],$spawn_rec_2$[$@i_spawn - 1];
	if ($@spawn_type == 3) set $spawn_rec_3$[$@i_spawn],$spawn_rec_3$[$@i_spawn - 1];
	set $@i_spawn, $@i_spawn - 1;
	if ($@i_spawn < 1) goto Enregistrement; // Inutile de décaler le 9 (10eme élément)
	goto Boucle;

Enregistrement:
	if ($@spawn_type == 1) set $spawn_rec_1$[0],"^999999" + gettimestr("%d/%m - %H:%M",14) + "^000000 / " + getarg(0) + " / ^0000FF" + $@numero_spawn + "^000000";
	if ($@spawn_type == 2) set $spawn_rec_2$[0],"^999999" + gettimestr("%d/%m - %H:%M",14) + "^000000 / " + getarg(0) + " / ^0000FF" + $@numero_spawn + "^000000";
	if ($@spawn_type == 3) set $spawn_rec_3$[0],"^999999" + gettimestr("%d/%m - %H:%M",14) + "^000000 / " + getarg(0) + " / ^0000FF" + $@numero_spawn + "^000000";
	set $@i_spawn, 0;
	return;
}


// Fin de l'event
// --------------
function	script	close_spawn	{
// Ne pas remettre les flags à la fin de l'event.
// S'il y a des survivants, cela leur permettrait de se battre, etc...
	killmonsterall "guild_vs5.gat";
	disablenpc "warpspawn";
	enablenpc "warprep";
	enablenpc "warprep2";
	enablenpc "warprep3";
	enablenpc "warprep4";
	set $@numero_spawn,0;
	set $@dernier_mob,0;
	set $@Spawn_flag,0; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	set $@nb_part,0;
	set $@nb_part2,0;
	set $@survivants,0;
	set $@nb_mobs,0;
	set $@nb_mobs_permanents,0;
	set $@spawn_type,0;

	stopnpctimer "Surviv";
	stopnpctimer "Spawner";

	return;
}


// Spawn des monstres
// ------------------
function	script	f_monstres	{
	if (agitcheck(0) != 0) goto L_woe;
	set $@nb_part,getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20); // Joueurs vivants moins GMs vivants
	if ($@nb_part < 1) goto L_stop;
	if ($@nb_part > $@survivants) goto L_triche; // Quelqu'un a été téléporté ou rescussité
	set $@nb_mobs, $@nb_mobs - (($@survivants - $@nb_part) * 3); // Réduire le nombre de spawns par mort
	set $@survivants, $@nb_part;

	// Ne pas spawner si l'event n'est pas en cours (juste une sécurité)
	if ($@Spawn_flag < 2) return; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné

	set $@NbMapMobs, (GetMapMobs("guild_vs5.gat") - $@nb_mobs_permanents);
	// Réduire le nombre de spawns, si les joueurs tuent trop lentement les mobs
	if ($@NbMapMobs > ($@nb_mobs / 3)) set $@nb_mobs,$@nb_mobs - ($@nb_mobs / 8);
	if ($@NbMapMobs > ($@nb_mobs * 4 / 5)) set $@nb_mobs,$@nb_mobs - ($@nb_mobs / 10);
	if ($@nb_mobs < 40) set $@nb_mobs,40;
	// Augmenter le nombre de spawns, si les joueurs tuent trop vite les mobs
	if ($@NbMapMobs < ($@nb_mobs / 10)) set $@nb_mobs,$@nb_mobs + 5;
	if ($@NbMapMobs < ($@nb_mobs / 20)) set $@nb_mobs,$@nb_mobs + 5;

	// Détermination des seuils pour les spawns
	set $@a_spawner, $@nb_mobs;
	if ($@a_spawner < 40) set $@a_spawner,40;
	if ($@a_spawner > 200) set $@a_spawner,200;

	// Spawn des monstres
	set $@dernier_mob, getarg(0);
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Survivor",$@dernier_mob,$@a_spawner,"Surviv::OnMortMob";
	set $@a_spawner, 0;

	if ($@nb_part2 == $@nb_part) goto Annonce_map; // $@nb_part2: pour afficher en global (announce) le nombre de partipants (quand ça change), sinon seulement en (mapannounce)
	announce "Garde Royal: Encore " + $@nb_part + " participants en lice pour le titre de Master Survivor!",0;
	set $@nb_part2, $@nb_part;
	goto Suite_annonce;

Annonce_map:
	mapannounce "guild_vs5.gat","Garde Royal: Encore " + $@nb_part + " participants en lice pour le titre de Master Survivor!",0;
	goto Suite_annonce;

Suite_annonce:
	// indication du nombre de monstres restant des spawns précédents
	if ($@NbMapMobs < 1) goto Suite_spawn;
	if ($@NbMapMobs == 1) goto Suite_annonce1; // évite le 's' à monstres
	mapannounce "guild_vs5.gat","Il reste encore " + $@NbMapMobs + " monstres des spawns précédents...",0;
	goto Suite_spawn;

Suite_annonce1:
	mapannounce "guild_vs5.gat","Il reste encore 1 monstre des spawns précédents...",0;
	goto Suite_spawn;

Suite_spawn:
	set $@NbMapMobs, 0;
	mapannounce "guild_vs5.gat","Vague de spawns numéro " + $@numero_spawn + " -> Invasion de '" + strmobinfo(2,$@dernier_mob) + "'.",0;
	return;

L_stop:
	announce "L'arène du Spawn Survivor est vide (ou tous les partipants sont morts).",0;
	announce "L'évent s'est arrêté de lui-même à la vague de spawns numéro " + $@numero_spawn + ".",0;
	callfunc "close_spawn";
	return;

L_woe:
	announce "Le Spawn Survivor est arreté pour cause de WoE.",0;
	mapannounce "guild_vs5.gat","Garde Royal: Les joueurs présents doivent emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	callfunc "close_spawn";
	return;

L_triche:
	announce "Le Spawn Survivor est arreté pour cause de TRICHE!",0;
	announce "Un joueur a été rescussité ou téléporté dans l'arène!",0;
	mapannounce "guild_vs5.gat","Garde Royal: Les joueurs présents doivent emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	callfunc "close_spawn";
	return;
}


// Fonction testant si les joueurs sont trop efficaces afin de respawner à mi-temps d'autres monstres pour les occuper
// -------------------------------------------------------------------------------------------------------------------
function	script	check_monstres	{
	if (agitcheck(0) != 0) goto return;
	// Ne pas spawner si l'event n'est pas en cours (juste une sécurité)
	if ($@Spawn_flag != 2) return; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné

	if ((GetMapMobs("guild_vs5.gat") - $@nb_mobs_permanents) >= ($@nb_mobs / 5)) return;

	// Augmenter le nombre de spawns, les joueurs tuent trop vite les mobs (test mini/maxi au moment du spawn)
	set $@nb_mobs,$@nb_mobs + ($@nb_mobs / 20); // +5%
	set $@a_spawner, $@nb_mobs;
	if ($@a_spawner < 40) set $@a_spawner,40;
	if ($@a_spawner > 200) set $@a_spawner,200;
	set $@a_spawner, $@nb_mobs / 4; // ne pas trop spawner en mi-temps (25%)

re_random:
	set $@spawn_rnd, rand(1,10);
	if ($@spawn_rnd == 1) goto rnd1;
	if ($@spawn_rnd == 2) goto rnd2;
	if ($@spawn_rnd == 3) goto rnd3;
	if ($@spawn_rnd == 4) goto rnd4;
	if ($@spawn_rnd == 5) goto rnd5;
	if ($@spawn_rnd == 6) goto rnd6;
	if ((GetMapMobs("guild_vs5.gat") - $@nb_mobs_permanents) > 0) goto re_random; // ne pas respawner le même monstre s'il reste des monstres
	goto Repeter_dernier;

Repeter_dernier:
	mapannounce "guild_vs5.gat","Garde Royal: Voici une seconde vague de '" + strmobinfo(2,getarg(0)) + "'.",0;
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Survivor",getarg(0),$@a_spawner,"Surviv::OnMortMob";
	set $@spawn_rnd, 0;
	set $@a_spawner, 0;
	return;

rnd1: // porings
	mapannounce "guild_vs5.gat","Garde Royal: Voici de quoi vous passer le temps...",0;
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Pour patienter...",1002,$@a_spawner,"Surviv::OnMortMob";
	set $@spawn_rnd, 0;
	set $@a_spawner, 0;
	return;

rnd2: // fabres
	mapannounce "guild_vs5.gat","Garde Royal: Des vers attirés par les monstres morts sont apparus. Merci de nettoyer l'arène...",0;
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Vers nécrophage",1007+2000,$@a_spawner,"Surviv::OnMortMob"; // +2000 pour 'petit' monstre
	set $@spawn_rnd, 0;
	set $@a_spawner, 0;
	return;

rnd3: // lunatics
	mapannounce "guild_vs5.gat","Garde Royal: Des lapinoux carnivores se sont échappés du zoo royal. Merci de nous en débarasser...",0;
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Lapinou carnivore",1063+2000,$@a_spawner,"Surviv::OnMortMob"; // +2000 pour 'petit' monstre
	set $@spawn_rnd, 0;
	set $@a_spawner, 0;
	return;

rnd4: // Willows
	mapannounce "guild_vs5.gat","Garde Royal: Une driade a invoquée des arbres de l'enfer. Merci de détruire ces creatures d'un autre monde...",0;
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Arbre satanique",1010,$@a_spawner,"Surviv::OnMortMob";
	set $@spawn_rnd, 0;
	set $@a_spawner, 0;
	return;

rnd5: // ChonChons
	mapannounce "guild_vs5.gat","Garde Royal: Le sang a attiré des Moustiques. Faîtes attention à vous...",0;
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Moustique",1011+2000,$@a_spawner,"Surviv::OnMortMob"; // +2000 pour 'petit' monstre
	set $@spawn_rnd, 0;
	set $@a_spawner, 0;
	return;

rnd6: // Skeletons
	mapannounce "guild_vs5.gat","Garde Royal: Un nécromancien vient de ranimer les monstres morts. Restez sur vos gardes...",0;
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Monstre mort-vivant",1076,$@a_spawner,"Surviv::OnMortMob";
	set $@spawn_rnd, 0;
	set $@a_spawner, 0;
	return;
}




// NPC principal de l'event
// ------------------------
guild_vs5.gat,51,49,1	script	Surviv	-1,{
	end;

// Initialisation
OnInit:
	stopnpctimer;
	end;

OnStart:
	set $@Spawn_flag,2; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	Announce "Garde Royal: Le Spawn Survivor commence. L'accès en est coupé.",8;
	disablenpc "warpspawn";
	disablenpc "warprep";
	disablenpc "warprep2";
	disablenpc "warprep3";
	disablenpc "warprep4";
	initnpctimer;

	// Détermination du type de spawn
	if ($@spawn_type == 0) set $@spawn_type, rand(1,3);
	if ($@spawn_type == 2) goto L_spawntype2;
	if ($@spawn_type == 3) goto L_spawntype3;
	set $@spawn_type, 1; // par défaut, le type 'sympa'
	goto L_spawntype1;

L_spawntype1:
	set $@spawn1,1002; // Poring
	set $@spawn2,1063; // Lunatic
	set $@spawn3,1011; // ChonChon
	set $@spawn4,1008; // Pupa
	set $@spawn5,1031; // Poporing

	set $@spawn6,1015; // Zombie
	set $@spawn7,1056; // Smokie
	set $@spawn8,1068; // Hydra
	set $@spawn9,1077; // Poison Spore
	set $@spawn10,1105; // Deniro

	set $@spawn11,1178; // Zerom
	set $@spawn12,1030; // Anacondaq
	set $@spawn13,1145; // Martin
	set $@spawn14,1100; // Argos
	set $@spawn15,1392; // Rotar Zairo

	set $@spawn16,1060; // Bigfoot
	set $@spawn17,1067; // Cornutus
	set $@spawn18,1064; // Megalodon
	set $@spawn19,1106; // Desert Wolf
	set $@spawn20,1258; // Goblin Archer

	set $@spawn21,1119; // Frilldora
	set $@spawn22,1141; // Marina
	set $@spawn23,1127; // Hode
	set $@spawn24,1146; // Matyr
	set $@spawn25,1282; // Kobold Archer

	set $@spawn26,1110; // Dokebi
	set $@spawn27,1248; // Cruiser
	set $@spawn28,1026; // Munak
	set $@spawn29,1471; // Nine Tail
	set $@spawn30,1261; // Wild Rose

	set $@spawn31,1016; // Skeleton Archer
	set $@spawn32,1400; // Karakasa
	set $@spawn33,1138; // Magnolia
	set $@spawn34,1165; // Sandman
	set $@spawn35,1249; // Myst Case

	set $@spawn36,1403; // Firelock Soldier
	set $@spawn37,1040; // Golem
	set $@spawn38,1680; // Hill Wind
	set $@spawn39,1099; // Argiope
	set $@spawn40,1209; // Cramp

	set $@spawn41,1029; // Isis
	set $@spawn42,1144; // Marse
	set $@spawn43,1274; // Megalith
	set $@spawn44,1102; // Bathory
	set $@spawn45,1715; // Novus

	set $@spawn46,1170; // Sohee
	set $@spawn47,1156; // Sky Petite
	set $@spawn48,1215; // Stem Worm
	set $@spawn49,1213; // High Orc
	set $@spawn50,1271; // Alligator
	goto Suite_onstart;

L_spawntype2:
	set $@spawn1,1048; // Thief Bug Egg
	set $@spawn2,1049; // Picky
	set $@spawn3,1010; // Willow
	set $@spawn4,1012; // Roda Frog
	set $@spawn5,1167; // Savage Babe

	set $@spawn6,1018; // Creamy
	set $@spawn7,1033; // Elder Willow
	set $@spawn8,1176; // Vitata
	set $@spawn9,1265; // Cookie
	set $@spawn10,1124; // Goblin 4 (Poison)

	set $@spawn11,1001; // Scorpion
	set $@spawn12,1111; // Drainliar
	set $@spawn13,1103; // Caramel
	set $@spawn14,1153; // Orc Zombie
	set $@spawn15,1494; // Beetle King

	set $@spawn16,1129; // Horong
	set $@spawn17,1162; // Rafflesia
	set $@spawn18,1620; // Noxious
	set $@spawn19,1246; // Cookie Xmas
	set $@spawn20,1409; // Dumpling Child

	set $@spawn21,1121; // Giearth
	set $@spawn22,1280; // Goblin Steamrider
	set $@spawn23,1415; // Baby Leopard
	set $@spawn24,1169; // Skeleton Worker
	set $@spawn25,1143; // Marionette

	set $@spawn26,1165; // Sandman
	set $@spawn27,1199; // Punk
	set $@spawn28,1142; // Marine Sphere
	set $@spawn29,1151; // Myst
	set $@spawn30,1253; // Gargoyle

	set $@spawn31,1498; // Wootan Shooter
	set $@spawn32,1069; // Swordfish
	set $@spawn33,1508; // Quve
	set $@spawn34,1621; // Venomous
	set $@spawn35,1263; // Wind Ghost

	set $@spawn36,1276; // Raydric Archer
	set $@spawn37,1032; // Verit
	set $@spawn38,1211; // Brilight
	set $@spawn39,1194; // Arclouze
	set $@spawn40,1210; // Filamentous

	set $@spawn41,1404; // Miyabi Doll
	set $@spawn42,1687; // Grove
	set $@spawn43,1503; // Gibbet
	set $@spawn44,1109; // Deviruchi
	set $@spawn45,1189; // Orc Archer

	set $@spawn46,1260; // Dark Frame
	set $@spawn47,1506; // Disguise
	set $@spawn48,1664; // Photon Canon
	set $@spawn49,1321; // Dragon Tail
	set $@spawn50,1383; // Explosion
	goto Suite_onstart;

L_spawntype3:
	set $@spawn1,1002; // Poring
	if (rand(1,2) == 1) set $@spawn1,1048; // Thief Bug Egg
	set $@spawn2,1063; // Lunatic
	if (rand(1,2) == 1) set $@spawn2,1049; // Picky
	set $@spawn3,1011; // ChonChon
	if (rand(1,2) == 1) set $@spawn3,1010; // Willow
	set $@spawn4,1008; // Pupa
	if (rand(1,2) == 1) set $@spawn4,1012; // Roda Frog
	set $@spawn5,1031; // Poporing
	if (rand(1,2) == 1) set $@spawn5,1167; // Savage Babe

	set $@spawn6,1015; // Zombie
	if (rand(1,2) == 1) set $@spawn6,1018; // Creamy
	set $@spawn7,1056; // Smokie
	if (rand(1,2) == 1) set $@spawn7,1033; // Elder Willow
	set $@spawn8,1068; // Hydra
	if (rand(1,2) == 1) set $@spawn8,1176; // Vitata
	set $@spawn9,1077; // Poison Spore
	if (rand(1,2) == 1) set $@spawn9,1265; // Cookie
	set $@spawn10,1105; // Deniro
	if (rand(1,2) == 1) set $@spawn10,1124; // Goblin 4 (Poison)

	set $@spawn11,1178; // Zerom
	if (rand(1,2) == 1) set $@spawn11,1001; // Scorpion
	set $@spawn12,1030; // Anacondaq
	if (rand(1,2) == 1) set $@spawn12,1111; // Drainliar
	set $@spawn13,1145; // Martin
	if (rand(1,2) == 1) set $@spawn13,1103; // Caramel
	set $@spawn14,1100; // Argos
	if (rand(1,2) == 1) set $@spawn14,1153; // Orc Zombie
	set $@spawn15,1392; // Rotar Zairo
	if (rand(1,2) == 1) set $@spawn15,1494; // Beetle King

	set $@spawn16,1060; // Bigfoot
	if (rand(1,2) == 1) set $@spawn16,1129; // Horong
	set $@spawn17,1067; // Cornutus
	if (rand(1,2) == 1) set $@spawn17,1162; // Rafflesia
	set $@spawn18,1064; // Megalodon
	if (rand(1,2) == 1) set $@spawn18,1620; // Noxious
	set $@spawn19,1106; // Desert Wolf
	if (rand(1,2) == 1) set $@spawn19,1246; // Cookie Xmas
	set $@spawn20,1258; // Goblin Archer
	if (rand(1,2) == 1) set $@spawn20,1409; // Dumpling Child

	set $@spawn21,1119; // Frilldora
	if (rand(1,2) == 1) set $@spawn21,1121; // Giearth
	set $@spawn22,1141; // Marina
	if (rand(1,2) == 1) set $@spawn22,1280; // Goblin Steamrider
	set $@spawn23,1127; // Hode
	if (rand(1,2) == 1) set $@spawn23,1415; // Baby Leopard
	set $@spawn24,1146; // Matyr
	if (rand(1,2) == 1) set $@spawn24,1169; // Skeleton Worker
	set $@spawn25,1282; // Kobold Archer
	if (rand(1,2) == 1) set $@spawn25,1143; // Marionette

	set $@spawn26,1110; // Dokebi
	if (rand(1,2) == 1) set $@spawn26,1165; // Sandman
	set $@spawn27,1248; // Cruiser
	if (rand(1,2) == 1) set $@spawn27,1199; // Punk
	set $@spawn28,1026; // Munak
	if (rand(1,2) == 1) set $@spawn28,1142; // Marine Sphere
	set $@spawn29,1471; // Nine Tail
	if (rand(1,2) == 1) set $@spawn29,1151; // Myst
	set $@spawn30,1261; // Wild Rose
	if (rand(1,2) == 1) set $@spawn30,1253; // Gargoyle

	set $@spawn31,1016; // Skeleton Archer
	if (rand(1,2) == 1) set $@spawn31,1498; // Wootan Shooter
	set $@spawn32,1400; // Karakasa
	if (rand(1,2) == 1) set $@spawn32,1069; // Swordfish
	set $@spawn33,1138; // Magnolia
	if (rand(1,2) == 1) set $@spawn33,1508; // Quve
	set $@spawn34,1165; // Sandman
	if (rand(1,2) == 1) set $@spawn34,1621; // Venomous
	set $@spawn35,1249; // Myst Case
	if (rand(1,2) == 1) set $@spawn35,1263; // Wind Ghost

	set $@spawn36,1403; // Firelock Soldier
	if (rand(1,2) == 1) set $@spawn36,1276; // Raydric Archer
	set $@spawn37,1040; // Golem
	if (rand(1,2) == 1) set $@spawn37,1032; // Verit
	set $@spawn38,1680; // Hill Wind
	if (rand(1,2) == 1) set $@spawn38,1211; // Brilight
	set $@spawn39,1099; // Argiope
	if (rand(1,2) == 1) set $@spawn39,1194; // Arclouze
	set $@spawn40,1209; // Cramp
	if (rand(1,2) == 1) set $@spawn40,1210; // Filamentous

	set $@spawn41,1029; // Isis
	if (rand(1,2) == 1) set $@spawn41,1404; // Miyabi Doll
	set $@spawn42,1144; // Marse
	if (rand(1,2) == 1) set $@spawn42,1687; // Grove
	set $@spawn43,1274; // Megalith
	if (rand(1,2) == 1) set $@spawn43,1503; // Gibbet
	set $@spawn44,1102; // Bathory
	if (rand(1,2) == 1) set $@spawn44,1109; // Deviruchi
	set $@spawn45,1715; // Novus
	if (rand(1,2) == 1) set $@spawn45,1189; // Orc Archer

	set $@spawn46,1170; // Sohee
	if (rand(1,2) == 1) set $@spawn46,1260; // Dark Frame
	set $@spawn47,1156; // Sky Petite
	if (rand(1,2) == 1) set $@spawn47,1506; // Disguise
	set $@spawn48,1215; // Stem Worm
	if (rand(1,2) == 1) set $@spawn48,1664; // Photon Canon
	set $@spawn49,1213; // High Orc
	if (rand(1,2) == 1) set $@spawn49,1321; // Dragon Tail
	set $@spawn50,1271; // Alligator
	if (rand(1,2) == 1) set $@spawn50,1383; // Explosion
	goto Suite_onstart;

Suite_onstart:
	set $@nb_part,getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20); // Joueurs vivants moins GMs vivants
	set $@survivants,$@nb_part; // pour tester les cas de triche
	set $@nb_part2,$@nb_part; // $@nb_part2: pour afficher en global (announce) le nombre de partipants (quand ça change), sinon seulement en (mapannounce)
	set $@nb_mobs,($@nb_part + 4) * 5; // type 1 (par défaut)
	if ($@spawn_type == 2) set $@nb_mobs,($@nb_part + rand(1,4)) * 4; // type 2
	if ($@spawn_type == 3) set $@nb_mobs,($@nb_part + rand(1,4)) * 5; // type 3
	if ($@nb_mobs < 40) set $@nb_mobs,40; // minimum 40

	announce "Il y a " + $@nb_part + " participants pour le titre de Master Survivor. Bonne chance!",0;
	mapannounce "guild_vs5.gat","Garde Royal: Pour devenir le Master Survivor, vous devez tuer un monstre en étant le dernier survivant!",0;
	mapannounce "guild_vs5.gat","Garde Royal: Règle importante: Il est INTERDIT de téléporter un joueur dans l'arène ou de rescussiter un joueur.",0;
	mapannounce "guild_vs5.gat","Garde Royal: 30 secondes entre chaque spawn de monstres différents. Survivez !",0; //Première slave.

	set $@numero_spawn,1;
	callfunc "f_monstres", $@spawn1;
	end;

OnTimer20000:
	mapannounce "guild_vs5.gat","Garde Royal: Mise en place de nettoyeurs pour ramasser les restes.",0;
	areamonster "guild_vs5.gat",0,0,200,200,"Nettoyeur",1002,5,"Surviv::OnMortPoring"; // Poring
	set $@nb_mobs_permanents,$@nb_mobs_permanents + 5;
	end;

OnTimer30000:
	set $@numero_spawn,2;
	callfunc "f_monstres", $@spawn2;
	end;

OnTimer60000:
	set $@numero_spawn,3;
	callfunc "f_monstres", $@spawn3;
	end;

OnTimer90000:
	set $@numero_spawn,4;
	callfunc "f_monstres", $@spawn4;
	end;

OnTimer120000:
	mapannounce "guild_vs5.gat","Garde Royal: 60 secondes entre chaque spawn de monstres différents.",0;
	set $@numero_spawn,5;
	callfunc "f_monstres", $@spawn5;
	end;

OnTimer165000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 15 secondes.",0;
	end;
OnTimer180000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Continuons à monter en puissance...",0;
	set $@numero_spawn,6;
	callfunc "f_monstres", $@spawn6;
	end;

OnTimer225000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 15 secondes.",0;
	end;
OnTimer240000:
	set $@numero_spawn,7;
	callfunc "f_monstres", $@spawn7;
	end;

OnTimer285000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 15 secondes.",0;
	end;
OnTimer300000:
	set $@numero_spawn,8;
	callfunc "f_monstres", $@spawn8;
	end;

OnTimer345000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 15 secondes.",0;
	end;
OnTimer360000:
	set $@numero_spawn,9;
	callfunc "f_monstres", $@spawn9;
	end;

OnTimer405000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 15 secondes.",0;
	end;
OnTimer420000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Plus difficile maintenant.",0;
	set $@numero_spawn,10;
	callfunc "f_monstres", $@spawn10;
	end;

OnTimer465000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 15 secondes.",0;
	end;
OnTimer480000:
	mapannounce "guild_vs5.gat","Garde Royal: une minute 30 entre chaque spawn de monstres différents.",0;
	set $@numero_spawn,11;
	callfunc "f_monstres", $@spawn11;
	end;
OnTimer525000: // pour patienter (45 sec après le spawn)
	callfunc "check_monstres", $@spawn11;
	end;

OnTimer550000:
	mapannounce "guild_vs5.gat","Garde Royal: Mise en place de nettoyeurs plus résistants.",0;
	mapannounce "guild_vs5.gat","Garde Royal: Mise en place de nettoyeurs plus résistants.",0;
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Nettoyeur",1017,5,"Surviv::OnMortBugAgro"; // Thief Bug Female
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Nettoyeur",1021,2,"Surviv::OnMortBugM"; // Thief Bug Male
	set $@nb_mobs_permanents,$@nb_mobs_permanents + 7;

	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer570000:
	set $@numero_spawn,12;
	callfunc "f_monstres", $@spawn12;
	end;
OnTimer615000: // pour patienter (45 sec après le spawn)
	callfunc "check_monstres", $@spawn12;
	end;

OnTimer640000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer660000:
	set $@numero_spawn,13;
	callfunc "f_monstres", $@spawn13;
	end;
OnTimer705000: // pour patienter (45 sec après le spawn)
	callfunc "check_monstres", $@spawn13;
	end;

OnTimer730000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer750000:
	set $@numero_spawn,14;
	callfunc "f_monstres", $@spawn14;
	end;
OnTimer795000: // pour patienter (45 sec après le spawn)
	callfunc "check_monstres", $@spawn14;
	end;

OnTimer820000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer840000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Plus dur maintenant.",0;
	set $@numero_spawn,15;
	callfunc "f_monstres", $@spawn15;
	end;
OnTimer885000: // pour patienter (45 sec après le spawn)
	callfunc "check_monstres", $@spawn15;
	end;

OnTimer910000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer930000:
	mapannounce "guild_vs5.gat","Garde Royal: 2 minutes entre chaque spawn de monstres différents.",0;
	set $@numero_spawn,16;
	callfunc "f_monstres" , $@spawn16;
	end;
OnTimer990000: // pour patienter (1 min après le spawn)
	callfunc "check_monstres", $@spawn16;
	end;

OnTimer1030000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer1050000:
	set $@numero_spawn,17;
	callfunc "f_monstres", $@spawn17;
	end;
OnTimer1110000: // pour patienter (1 min après le spawn)
	callfunc "check_monstres", $@spawn17;
	end;

OnTimer1150000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer1170000:
	set $@numero_spawn,18;
	callfunc "f_monstres", $@spawn18;
	end;
OnTimer1230000: // pour patienter (1 min après le spawn)
	callfunc "check_monstres", $@spawn18;
	end;

OnTimer1270000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer1290000:
	set $@numero_spawn,19;
	callfunc "f_monstres", $@spawn19;
	end;
OnTimer1350000: // pour patienter (1 min après le spawn)
	callfunc "check_monstres", $@spawn19;
	end;

OnTimer1390000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer1410000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Encore plus dur maintenant.",0;
	set $@numero_spawn,20;
	callfunc "f_monstres", $@spawn20;
	end;
OnTimer1470000: // pour patienter (1 min après le spawn)
	callfunc "check_monstres", $@spawn20;
	end;

OnTimer1510000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer1530000:
	mapannounce "guild_vs5.gat","Garde Royal: 2 minutes 30 entre chaque spawn de monstres différents.",0;
	set $@numero_spawn,21;
	callfunc "f_monstres" , $@spawn21;
	end;
OnTimer1605000: // pour patienter (1 min 15 après le spawn)
	callfunc "check_monstres", $@spawn21;
	end;

OnTimer1660000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer1680000:
	set $@numero_spawn,22;
	callfunc "f_monstres", $@spawn22;
	end;
OnTimer1755000: // pour patienter (1 min 15 après le spawn)
	callfunc "check_monstres", $@spawn22;
	end;

OnTimer1810000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer1830000:
	set $@numero_spawn,23;
	callfunc "f_monstres", $@spawn23;
	end;
OnTimer1905000: // pour patienter (1 min 15 après le spawn)
	callfunc "check_monstres", $@spawn23;
	end;

OnTimer1960000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer1980000:
	set $@numero_spawn,24;
	callfunc "f_monstres", $@spawn24;
	end;
OnTimer2055000: // pour patienter (1 min 15 après le spawn)
	callfunc "check_monstres", $@spawn24;
	end;

OnTimer2110000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer2130000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Encore plus difficile maintenant.",0;
	set $@numero_spawn,25;
	callfunc "f_monstres", $@spawn25;
	end;
OnTimer2205000: // pour patienter (1 min 15 après le spawn)
	callfunc "check_monstres", $@spawn25;
	end;

OnTimer2260000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer2280000:
	mapannounce "guild_vs5.gat","Garde Royal: 180 secondes entre chaque spawn de monstres différents.",0;
	set $@numero_spawn,26;
	callfunc "f_monstres", $@spawn26;
	end;
OnTimer2370000: // pour patienter (1 min 30 après le spawn)
	callfunc "check_monstres", $@spawn26;
	end;

OnTimer2440000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer2460000:
	set $@numero_spawn,27;
	callfunc "f_monstres", $@spawn27;
	end;
OnTimer2550000: // pour patienter (1 min 30 après le spawn)
	callfunc "check_monstres", $@spawn27;
	end;

OnTimer2620000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer2640000:
	set $@numero_spawn,28;
	callfunc "f_monstres", $@spawn28;
	end;
OnTimer2730000: // pour patienter (1 min 30 après le spawn)
	callfunc "check_monstres", $@spawn28;
	end;

OnTimer2800000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer2820000:
	set $@numero_spawn,29;
	callfunc "f_monstres", $@spawn29;
	end;
OnTimer2910000: // pour patienter (1 min 30 après le spawn)
	callfunc "check_monstres", $@spawn29;
	end;

OnTimer2980000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer3000000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Passons aux choses sérieuses...",0;
	set $@numero_spawn,30;
	callfunc "f_monstres", $@spawn30;
	end;
OnTimer3090000: // pour patienter (1 min 30 après le spawn)
	callfunc "check_monstres", $@spawn30;
	end;

OnTimer3160000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer3180000:
	mapannounce "guild_vs5.gat","Garde Royal: 3 minutes 30 entre chaque spawn de monstres différents.",0;
	set $@numero_spawn,31;
	callfunc "f_monstres", $@spawn31;
	end;
OnTimer3285000: // pour patienter (1 min 45 après le spawn)
	callfunc "check_monstres", $@spawn31;
	end;

OnTimer3370000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer3390000:
	set $@numero_spawn,32;
	callfunc "f_monstres", $@spawn32;
	end;
OnTimer3495000: // pour patienter (1 min 45 après le spawn)
	callfunc "check_monstres", $@spawn32;
	end;

OnTimer3580000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer3600000:
	set $@numero_spawn,33;
	callfunc "f_monstres", $@spawn33;
	end;
OnTimer3705000: // pour patienter (1 min 45 après le spawn)
	callfunc "check_monstres", $@spawn33;
	end;

OnTimer3790000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer3810000:
	set $@numero_spawn,34;
	callfunc "f_monstres", $@spawn34;
	end;
OnTimer3915000: // pour patienter (1 min 45 après le spawn)
	callfunc "check_monstres", $@spawn34;
	end;

OnTimer4000000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer4020000:
	set $@numero_spawn,35;
	callfunc "f_monstres", $@spawn35;
	end;
OnTimer4125000: // pour patienter (1 min 45 après le spawn)
	callfunc "check_monstres", $@spawn35;
	end;

OnTimer4210000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer4230000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Après ces mises en bouches... le plat principal.",0;
	set $@numero_spawn,36;
	callfunc "f_monstres", $@spawn36;
	end;
OnTimer4335000: // pour patienter (1 min 45 après le spawn)
	callfunc "check_monstres", $@spawn36;
	end;

OnTimer4420000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer4440000:
	mapannounce "guild_vs5.gat","Garde Royal: 4 minutes entre chaque spawn de monstres différents.",0;
	set $@numero_spawn,37;
	callfunc "f_monstres", $@spawn37;
	end;
OnTimer4560000: // pour patienter (2 min après le spawn)
	callfunc "check_monstres", $@spawn37;
	end;

OnTimer4660000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer4680000:
	set $@numero_spawn,38;
	callfunc "f_monstres", $@spawn38;
	end;
OnTimer4800000: // pour patienter (2 min après le spawn)
	callfunc "check_monstres", $@spawn38;
	end;

OnTimer4900000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer4920000:
	set $@numero_spawn,39;
	callfunc "f_monstres", $@spawn39;
	end;
OnTimer5040000: // pour patienter (2 min après le spawn)
	callfunc "check_monstres", $@spawn39;
	end;

OnTimer5140000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer5160000:
	set $@numero_spawn,40;
	callfunc "f_monstres", $@spawn40;
	end;
OnTimer5280000: // pour patienter (2 min après le spawn)
	callfunc "check_monstres", $@spawn40;
	end;

OnTimer5380000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer5400000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Vous avez demandez plus fort...",0;
	set $@numero_spawn,41;
	callfunc "f_monstres", $@spawn41;
	end;
OnTimer5520000: // pour patienter (2 min après le spawn)
	callfunc "check_monstres", $@spawn41;
	end;

OnTimer5620000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer5640000:
	mapannounce "guild_vs5.gat","Garde Royal: 4 minutes 30 entre chaque spawn de monstres différents.",0;
	set $@numero_spawn,42;
	callfunc "f_monstres", $@spawn42;
	end;
OnTimer5775000: // pour patienter (2 min 15 après le spawn)
	callfunc "check_monstres", $@spawn42;
	end;

OnTimer5890000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer5910000:
	set $@numero_spawn,43;
	callfunc "f_monstres", $@spawn43;
	end;
OnTimer6045000: // pour patienter (2 min 15 après le spawn)
	callfunc "check_monstres", $@spawn43;
	end;

OnTimer6160000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer6180000:
	set $@numero_spawn,44;
	callfunc "f_monstres", $@spawn44;
	end;
OnTimer6315000: // pour patienter (2 min 15 après le spawn)
	callfunc "check_monstres", $@spawn44;
	end;

OnTimer6430000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer6450000:
	set $@numero_spawn,45;
	callfunc "f_monstres", $@spawn45;
	end;
OnTimer6585000: // pour patienter (2 min 15 après le spawn)
	callfunc "check_monstres", $@spawn45;
	end;

OnTimer6700000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer6720000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Ok, vous allez voir maintenant...",0;
	set $@numero_spawn,46;
	callfunc "f_monstres", $@spawn46;
	end;
OnTimer6855000: // pour patienter (2 min 15 après le spawn)
	callfunc "check_monstres", $@spawn46;
	end;

OnTimer6970000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer6990000:
	mapannounce "guild_vs5.gat","Garde Royal: 5 minutes entre chaque spawn de monstres différents.",0;
	set $@numero_spawn,47;
	callfunc "f_monstres", $@spawn47;
	end;
OnTimer7140000: // pour patienter (2 min 30 après le spawn)
	callfunc "check_monstres", $@spawn47;
	end;

OnTimer7270000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer7290000:
	set $@numero_spawn,48;
	callfunc "f_monstres", $@spawn48;
	end;
OnTimer7440000: // pour patienter (2 min 30 après le spawn)
	callfunc "check_monstres", $@spawn48;
	end;

OnTimer7570000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer7590000:
	mapannounce "guild_vs5.gat","Garde Royal: Avant dernier spawn. Ensuite, nous vous laissons 10 minutes avant le dernier...",0;
	set $@numero_spawn,49;
	callfunc "f_monstres", $@spawn49;
	end;
// pas de monstres pour patienter

OnTimer8170000:
	mapannounce "guild_vs5.gat","Garde Royal: Prochaine vague de spawn dans 20 secondes.",0;
	end;
OnTimer8190000:
	mapannounce "guild_vs5.gat","Garde Royal: Attention, dernier spawn ! Serez-vous les Masters Survivors ?!",0;
	set $@numero_spawn,50;
	callfunc "f_monstres", $@spawn50;
	set $@Spawn_flag,3; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	end;

// --------------------------
OnMortPoring: // A chaque mort d'un nettoyeur
	// On en respawn un pour toujours en avoir toujours le même nombre.
	areamonster "guild_vs5.gat",0,0,200,200,"Nettoyeur",1002,1,"Surviv::OnMortPoring"; // Poring
	goto OnMortMob;
OnMortBugAgro: // A chaque mort d'un nettoyeur agressif
	// On en respawn un pour toujours en avoir toujours le même nombre.
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Nettoyeur",1017,1,"Surviv::OnMortBugAgro"; // Thief Bug Female
	goto OnMortMob;
OnMortBugM: // A chaque mort d'un nettoyeur agressif
	// On en respawn un pour toujours en avoir toujours le même nombre.
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Nettoyeur",1021,1,"Surviv::OnMortBugM"; // Thief Bug Male
	goto OnMortMob;

// --------------------------
OnMortMob: // A chaque mort d'un monstre
	set $@nb_part,getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20); // Joueurs vivants moins GMs vivants
	if ($@nb_part > $@survivants) goto L_tricheur; // Quelqu'un a été téléporté ou rescussité
	set $@nb_mobs, $@nb_mobs - (($@survivants - $@nb_part) * 3); // Réduire le nombre de spawns par mort
	set $@survivants, $@nb_part;

	// un seul survivant
	if ($@nb_part == 1) goto Le_Gagnant;
	// note: pour tuer un monstre, il faut un joueur vivant, donc le test == 0 est inutile

// Ce n'est pas le dernier spawn -> continuer
	if ($@Spawn_flag != 3) end; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné

// affichage special pour le dernier spawn
	set $@Mob_a_tuer, (GetMapMobs("guild_vs5.gat") - $@nb_mobs_permanents);
	if ($@Mob_a_tuer != 500 && $@Mob_a_tuer != 400 && $@Mob_a_tuer != 300 && $@Mob_a_tuer != 200 && $@Mob_a_tuer != 100 && $@Mob_a_tuer != 50 && $@Mob_a_tuer != 10 && $@Mob_a_tuer != 5) goto OnMortMob_sans_quantity;
	mapannounce "guild_vs5.gat","Garde Royal: Encore " + $@Mob_a_tuer +" monstres à tuer.",0;
	set $@Mob_a_tuer, 0;
	end;

OnMortMob_sans_quantity:
	set $@Mob_a_tuer, 0;

	// Event est terminé (plus de monstre)?
	if ((GetMapMobs("guild_vs5.gat") - $@nb_mobs_permanents) > 0) end;

// Plusieurs gagnants
	announce "Nous avons plusieurs Masters Survivors dans le Spawn Survivor!",0;
	announce "Malheureusement, le Roy ne veut qu'un gagnant pour monter sur le podium.",0;
	announce "Aucun prix n'a donc été donné.",0;
	mapannounce "guild_vs5.gat","Garde Royal: Vous devez emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	goto L_gagnant_suite;

// 1 gagnant!
Le_Gagnant:
	announce "Nous avons un ultime survivant dans le Spawn Survivor!",0;
	announce "Il a gagné lorsqu'il affrontait la vague de spawns numéro " + $@numero_spawn + ".",0;
	announce "Le Master Survivor est: "+ strcharinfo(0) + ".",0;

	// Enregistrement du gagnant
	callfunc "Record_spawn", strcharinfo(0);

	// Le prix du gagnant
	announce strcharinfo(0) + " gagne " + ($@numero_spawn * 750) + " zenys.",0;
	set Zeny,Zeny + ($@numero_spawn * 750);

	mapannounce "guild_vs5.gat","Garde Royal: "+ strcharinfo(0) + " doit emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	goto L_gagnant_suite;

L_gagnant_suite:
	if ((getmapusers3("guild_vs5.gat") - getmapgms3("guild_vs5.gat",20)) < 1) goto L_stoptimer; // pas de mort sur la carte
	mapannounce "guild_vs5.gat","Garde Royal: Les autres, vous pouvez retourner à votre point de sauvegarde (ou deco/reco).",0;
	goto L_stoptimer;

L_tricheur:
	announce "Le Spawn Survivor est arreté pour cause de TRICHE!",0;
	announce "Un joueur a été rescussité ou téléporté dans l'arène!",0;
	mapannounce "guild_vs5.gat","Garde Royal: Les joueurs présents doivent emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	goto L_stoptimer;

L_stoptimer:
	callfunc "close_spawn";
	end;
}


// NPC extérieur + avant l'event --------------------------------------------



// Fonction spawnant des monstres pour faire patienter les joueurs avant l'event
// -----------------------------------------------------------------------------
function	script	before_event	{
	// Ne pas spawner si l'event n'est pas en cours (juste une sécurité)
	if ($@Spawn_flag != 1) return; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné

	if ((getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20)) < 1) return; // ne pas spawner si aucun joueur n'est dans l'arène

	set $@spawn_rnd, (rand(21,40) - GetMapMobs("guild_vs5.gat")) / 2; // divisé par 2, car 2 spawns (un normal, un agressif) // pas encore de monstres permanents ($@nb_mobs_permanents)
	if ($@spawn_rnd < 0) return;
	if ($@spawn_rnd < 10) goto Faire_spawn; // Ne pas afficher de message si la quantité est faible
	mapannounce "guild_vs5.gat","Garde Royal: Voici de quoi vous entraîner en attendant...",0;
	goto Faire_spawn;

Faire_spawn:
	areamonster "guild_vs5.gat",0,0,200,200,"Poring",1002,$@spawn_rnd,"";
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Poring carnivore",1002,$@spawn_rnd,"";
	if (rand(1, 3) == 1) areamonster "guild_vs5.gat",0,0,200,200,"Plante scintillante",1083,(getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20)) * 3 / 2,""; // shining plants
	set $@spawn_rnd, 0;
	return;
}


// NPC extérieur (à Prontéra) permettant d'activer l'événement
// -----------------------------------------------------------
prontera.gat,174,154,3	script	Spawner	743,{
	mes "[Spawner]";
	mes "Que désirez-vous?";
	next;
	if (getgmlevel(0) < 20) goto L_JoueurMenu;
	menu "Menu spécial GM",L_GmMenu,"Les règles",L_Regles,"Infos event en cours",L_informations,"Liste des gagnants",L_Gagnants;
	close;

// Menu pour les joueurs
L_JoueurMenu:
	menu "Les règles",L_Regles,"Infos event en cours",L_informations,"Liste des gagnants",L_Gagnants;
	close;

L_Regles:
	mes "[Spawner]";
	mes "Le Spawn Survivor est un événement dans lequel les participants doivent résister à des vagues successives de monstres agressifs.";
	mes "Les monstres sont de plus en plus puissants à chaque vague.";
	mes "Le dernier joueur à survivre peut espérer gagner et emporter le prix.";
	next;
	mes "[Spawner]";
	mes "Le Spawn Survivor ne peut être activé que par un GM ou de manière automatisée tous les jours à 02h00, 06h00, 10h00 et 23h30 et le Samedi à 13h30.";
	mes "Présentez-vous 10 minutes avant l'heure prévue pour un Spawn Survivor automatisé.";
	next;
	mes "[Spawner]";
	mes "Une fois le Spawn Survivor activé, vous avez 10 minutes pour venir ici et joindre la partie.";
	mes "Si vous arrivez en retard, le jeu se déroulera sans vous.";
	next;
	mes "[Spawner]";
	mes "Quelques règles:";
	mes "- Il est interdit de rescussiter un joueur durant le Spawn Survivor.";
	mes "- Il est interdit de téléporter un joueur dans l'arène durant le Spawn Survivor.";
	next;
	mes "[Spawner]";
	mes "Quelques règles (suite):";
	mes "- L'évènement est interdit à ceux qui n'ont pas le 'main'.";
	mes "- L'évènement est interdit aux novices (l'event n'est pas adapté à leur puissance).";
	mes "- L'évènement ne peut se faire que s'il y a au moins 2 participants.";
	next;
	mes "[Spawner]";
	mes "Le gagnant est l'unique survivant qui tue un monstre (double condition).";
	mes "Le gagnant gagne 750 fois le numéro de la dernière vague en zenys.";
	next;
	mes "[Spawner]";
	mes "Les différents types de Spawn Survivor:";
	mes "- Type 1: plutôt 'sympa'.";
	mes "- Type 2: 'assez dur'.";
	mes "- Type 3: mélange types 1 et 2.";
	next;
	mes "[Spawner]";
	mes "Un conseil: Désactivez les effets avec la commande ^00FF66/effect^000000.";
	mes "Au revoir.";
	close;

L_informations:
	if ($@Spawn_flag == 1) goto L_info_avant_event;
	if ($@Spawn_flag == 2) goto L_info_event_en_cours;
	if ($@Spawn_flag == 3) goto L_info_phase_finale;
	goto L_info_pas_event;

L_info_pas_event:
	mes "[Spawner]";
	mes "L'événement Spawn Survivor n'est pas activé.";
	mes "Il ne peut être activé que par un GM ou de manière automatisée tous les jours à 02h00, 06h00, 10h00 et 23h30 et le Samedi à 13h30.";
	mes "Présentez-vous 10 minutes avant l'heure prévue pour un Spawn Survivor automatisé.";
	mes "Au revoir.";
	close;

L_info_avant_event:
	mes "[Spawner]";
	mes "Un Spawn Survivor de type " + $@spawn_type + " est actuellement en cours de préparation.";
	mes "Il y a déjà " + (getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20)) + " participant(s) dans l'arène.";
	next;
	mes "[Spawner]";
	set $@delai_sec, 600 - (getnpctimer(0) / 1000);
	if ($@delai_sec < 1) mes "L'accès à l'arène a été fermé entre temps.";
	if ($@delai_sec > 0 && $@delai_sec < 60) mes "Vous avez encore " + $@delai_sec + " seconde(s) pour vous rendre dans l'arène.";
	if ($@delai_sec > 59 && $@delai_sec < 120) mes "Vous avez encore 1 minute et " + ($@delai_sec - 60) + " seconde(s) pour vous rendre dans l'arène.";
	if ($@delai_sec > 119) mes "Vous avez encore " + ($@delai_sec / 60) + " minutes pour vous rendre dans l'arène.";
	set $@delai_sec, 0;
	mes "Au revoir.";
	close;

L_info_event_en_cours:
	mes "[Spawner]";
	mes "Un Spawn Survivor de type " + $@spawn_type + " est actuellement en cours.";
	mes "La dernière vague de spawns (numéro " + $@numero_spawn + ") a été effectuée avec des '" + strmobinfo(2,$@dernier_mob) + "'.";
	next;
	mes "[Spawner]";
	set $@delai_sec, getnpctimer(0,"Surviv") / 1000;
	if ($@delai_sec < 1) mes "L'événement a été arrété entre temps.";
	if ($@delai_sec > 0 && $@delai_sec < 60) mes "L'événement a commencé il y a " + $@delai_sec + " seconde(s).";
	if ($@delai_sec > 59 && $@delai_sec < 120) mes "L'événement a commencé il y a 1 minute et " + ($@delai_sec - 60) + " seconde(s).";
	if ($@delai_sec > 119) mes "L'événement a commencé il y a " + ($@delai_sec / 60) + " minutes.";
	set $@delai_sec, 0;
	mes "Il y a " + $@survivants + " participants en lice qui ont " + (GetMapMobs("guild_vs5.gat") - $@nb_mobs_permanents) + " monstre(s) à tuer.";
	mes "Au revoir.";
	close;

L_info_phase_finale:
	mes "[Spawner]";
	mes "Un Spawn Survivor de type " + $@spawn_type + " est actuellement dans sa phase finale.";
	mes "Il reste " + (GetMapMobs("guild_vs5.gat") - $@nb_mobs_permanents) + " monstre(s) à tuer aux " + $@survivants + " participants en lice.";
	next;
	mes "[Spawner]";
	set $@delai_sec, getnpctimer(0,"Surviv") / 1000;
	if ($@delai_sec < 1) mes "L'événement a été arrété entre temps.";
	if ($@delai_sec > 0 && $@delai_sec < 60) mes "L'événement a commencé il y a " + $@delai_sec + " seconde(s).";
	if ($@delai_sec > 59 && $@delai_sec < 120) mes "L'événement a commencé il y a 1 minute et " + ($@delai_sec - 60) + " seconde(s).";
	if ($@delai_sec > 119) mes "L'événement a commencé il y a " + ($@delai_sec / 60) + " minutes.";
	set $@delai_sec, 0;
	mes "Au revoir.";
	close;

L_Gagnants:
	mes "^FF0000[Les 10 derniers Master Survivor (type 1)]^000000";
	mes "^999999Date^000000 / Master / ^0000FFVague^000000";
	set $@i_spawn, 0; // Commencer par le plus récent
	goto L_BOUCLE1;

L_BOUCLE1:
	mes $spawn_rec_1$[$@i_spawn];
	set $@i_spawn, $@i_spawn + 1;
	if ($@i_spawn > 10) goto L_SUITE1;
	goto L_BOUCLE1;

L_SUITE1:
	next;

	mes "^FF0000[Les 10 derniers Master Survivor (type 2)]^000000";
	mes "^999999Date^000000 / Master / ^0000FFVague^000000";
	set $@i_spawn, 0; // Commencer par le plus récent
	goto L_BOUCLE2;

L_BOUCLE2:
	mes $spawn_rec_2$[$@i_spawn];
	set $@i_spawn, $@i_spawn + 1;
	if ($@i_spawn > 10) goto L_SUITE2;
	goto L_BOUCLE2;

L_SUITE2:
	next;

	mes "^FF0000[Les 10 derniers Master Survivor (type 3)]^000000";
	mes "^999999Date^000000 / Master / ^0000FFVague^000000";
	set $@i_spawn, 0; // Commencer par le plus récent
	goto L_BOUCLE3;

L_BOUCLE3:
	mes $spawn_rec_3$[$@i_spawn];
	set $@i_spawn, $@i_spawn + 1;
	if ($@i_spawn > 10) goto L_SUITE3;
	goto L_BOUCLE3;

L_SUITE3:
	set $@i_spawn, 0;
	close;

// Initialisation
OnInit:
	killmonsterall "guild_vs5.gat";
	disablenpc "warpspawn";
	// note: laisser les warps de sortie activés
	set $@numero_spawn,0;
	set $@dernier_mob,0;
	set $@Spawn_flag,0; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	set $@nb_part,0;
	set $@nb_part2,0;
	set $@survivants,0;
	set $@nb_mobs,0;
	set $@nb_mobs_permanents,0;
	set $@spawn_type,0;
	stopnpctimer;
	end;

// Tous les samedis à 13h30
OnSat1320:
	if (agitcheck(0) != 0) end;
	if ($@Spawn_flag > 0) end; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	if ($@spawn_type == 0) set $@spawn_type, rand(1,3);
	Announce "Garde Royal: Le Spawn Survivor est ouvert (type déterminé au hasard: " + $@spawn_type + ").",8;
	goto L_creawarp;

// Tous les jours à 02h00
OnClock0150:
	if (agitcheck(0) != 0) end;
	if ($@Spawn_flag > 0) end; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	if ($@spawn_type == 0) set $@spawn_type, rand(1,3);
	Announce "Garde Royal: Le Spawn Survivor est ouvert (type déterminé au hasard: " + $@spawn_type + ").",8;
	goto L_creawarp;

// Tous les jours à 06h00
OnClock0550:
	if (agitcheck(0) != 0) end;
	if ($@Spawn_flag > 0) end; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	if ($@spawn_type == 0) set $@spawn_type, rand(1,3);
	Announce "Garde Royal: Le Spawn Survivor est ouvert (type déterminé au hasard: " + $@spawn_type + ").",8;
	goto L_creawarp;

// Tous les jours à 10h00
OnClock0950:
	if (agitcheck(0) != 0) end;
	if ($@Spawn_flag > 0) end; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	if ($@spawn_type == 0) set $@spawn_type, rand(1,3);
	Announce "Garde Royal: Le Spawn Survivor est ouvert (type déterminé au hasard: " + $@spawn_type + ").",8;
	goto L_creawarp;

// Tous les jours à 23h30
OnClock2320:
	if (agitcheck(0) != 0) end;
	if ($@Spawn_flag > 0) end; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	if ($@spawn_type == 0) set $@spawn_type, rand(1,3);
	Announce "Garde Royal: Le Spawn Survivor est ouvert (type déterminé au hasard: " + $@spawn_type + ").",8;
	goto L_creawarp;

// Menu GM (activer)
L_GmMenu:
	if (agitcheck(0) != 0) goto L_Gmwoe;
	if ($@Spawn_flag > 0) goto L_GmArreter; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	mes "[Spawner]";
	mes "Voulez-vous ^66FF66activer^000000 le Spawn Survivor?";
	mes "- Type 1: plutôt 'sympa'.";
	mes "- Type 2: 'assez dur'.";
	mes "- Type 3: mélange types 1 et 2.";
	menu "Oui (type 1)",L_GMlauch1,"Oui (type 2)",L_GMlauch2,"Oui (type 3)",L_GMlauch3,"Oui (hasard)",L_GMlauch_hasard,"Non",L_GmFin;
	close;

L_Gmwoe:
	mes "[Spawner]";
	mes "Vous ne pouvez pas activer maintenant un Spawn Survivor.";
	mes "En effet, la Guerre de l'Emperium est en cours...";
	mes "Désolé.";
	close;

// Menu GM (arrêter)
L_GmArreter:
	mes "[Spawner]";
	mes "Voulez-vous ^FF6666arrêter^000000 le Spawn Survivor?";
	menu "Oui",L_GMclose,"Non",L_GmFin;
	close;

L_GMclose:
	if ($@Spawn_flag == 0) goto L_GMdejaclose; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	close2; // Le script continue (sans le interaction avec le joueur)
	Announce "Garde Royal: " + strcharinfo(0) + " a stoppé le Spawn Survivor.",8;
	mapannounce "guild_vs5.gat","Garde Royal: Les joueurs présents doivent emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	callfunc "close_spawn";
	end;

L_GMdejaclose:
	mes "[Spawner]";
	mes "Le Spawn Survivor a été arrêté entre temps.";
	mes "Au revoir.";
	close;

L_GmFin:
	mes "[Spawner]";
	mes "Dans ce cas, au revoir.";
	close;

L_GMlauch1:
	if ($@Spawn_flag > 0) goto L_GMdejaLauch; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	set $@spawn_type, 1;
	Announce "Garde Royal: " +strcharinfo(0)+ " a activé un Spawn Survivor de type 1.",8;
	close2; // le script continue
	goto L_creawarp;

L_GMlauch2:
	if ($@Spawn_flag > 0) goto L_GMdejaLauch; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	set $@spawn_type, 2;
	Announce "Garde Royal: " +strcharinfo(0)+ " a activé un Spawn Survivor de type 2.",8;
	close2; // le script continue
	goto L_creawarp;

L_GMlauch3:
	if ($@Spawn_flag > 0) goto L_GMdejaLauch; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	set $@spawn_type, 3;
	Announce "Garde Royal: " +strcharinfo(0)+ " a activé un Spawn Survivor de type 3.",8;
	close2; // le script continue
	goto L_creawarp;

L_GMlauch_hasard:
	if ($@Spawn_flag > 0) goto L_GMdejaLauch; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	// Si $@spawn_type n'est pas défini avant ($@spawn_type == 0), c'est au hasard, mais on le détermine quand même.
	set $@spawn_type, rand(1,3);
	Announce "Garde Royal: " +strcharinfo(0)+ " a activé un Spawn Survivor (type déterminé au hasard: " + $@spawn_type + ").",8;
	close2; // le script continue
	goto L_creawarp;

L_GMdejaLauch:
	mes "[Spawner]";
	mes "Un Spawn Survivor a été activé entre temps.";
	mes "Au revoir.";
	close;

L_creawarp:
	set $@Spawn_flag,1; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	Announce "L'évent commence dans 10 minutes. Rendez-vous dans l'allée au sud de la fontaine de Prontera.",8;
	Announce "Si vous arrivez en retard, vous ne pourrez pas entrer dans l'arène.",8;
	killmonsterall "guild_vs5.gat";
	enablenpc "warpspawn";
	pvpoff "guild_vs5.gat";
	gvgoff "guild_vs5.gat";
	setmapflag "guild_vs5.gat",mf_nosave;
	setmapflag "guild_vs5.gat",mf_nopvp;
	setmapflag "guild_vs5.gat",mf_nomemo;
	setmapflag "guild_vs5.gat",mf_nobranch;
	setmapflag "guild_vs5.gat",mf_pvp_noguild;
	setmapflag "guild_vs5.gat",mf_nopenalty;
	setmapflag "guild_vs5.gat",mf_nozenypenalty;
	initnpctimer;
	end;

OnTimer60000:
	callfunc "before_event"; // 1 minute, spawn de monstres pour patienter.
	end;

OnTimer120000:
	callfunc "before_event"; // 2 minutes, spawn de monstres pour patienter.
	end;

OnTimer180000:
	callfunc "before_event"; // 3 minutes, spawn de monstres pour patienter.
	end;

OnTimer240000:
	callfunc "before_event"; // 4 minutes, spawn de monstres pour patienter.
	end;

OnTimer300000: // 5 minutes après je fais un rappel.
	Announce "Garde Royal: Plus que 5 minutes avant le Spawn Survivor de type " + $@spawn_type + ". Dépéchez-vous !",8;
	Announce "Rendez-vous dans l'allée au sud de la fontaine de Prontera. Si vous arrivez en retard,",8;
	Announce "vous ne pourrez pas entrer dans l'arène. Il y a déjà " + (getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20)) + " participant(s) dans l'arène.",8;
	callfunc "before_event"; // 5 minutes, spawn de monstres pour patienter.
	end;

OnTimer360000:
	callfunc "before_event"; // 6 minutes, spawn de monstres pour patienter.
	end;

OnTimer420000:
	callfunc "before_event"; // 7 minutes, spawn de monstres pour patienter.
	end;

OnTimer480000:
	Announce "Garde Royal: Début du Spawn Survivor de type " + $@spawn_type + " dans 2 minutes. Dépéchez-vous !",8;
	Announce "Rendez-vous dans l'allée au sud de la fontaine de Prontera. Si vous arrivez en retard,",8;
	Announce "vous ne pourrez pas entrer dans l'arène. Déjà " + (getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20)) + " participant(s) arrivé(s) dans l'arène.",8;
	callfunc "before_event"; // 8 minutes, spawn de monstres pour patienter.
	end;

OnTimer540000: // 9 minutes après je refais une annonce.
	Announce "Garde Royal: Le Spawn Survivor de type " + $@spawn_type + " commence dans 1 minute. Dépéchez-vous !",8;
	mapannounce "guild_vs5.gat","Garde Royal: Participants, préparez-vous au Spawn Survivor...",0;
	// nettoyage de la place
	if (GetMapMobs("guild_vs5.gat") < 1) end; // pas encore de monstres permanents ($@nb_mobs_permanents)
	mapannounce "guild_vs5.gat","Garde Royal: *Nettoyage de l'arène...*",0;
	killmonsterall "guild_vs5.gat"; // destruction des monstres pour laisser une minute tranquille
	end;

OnTimer585000: // 9 minute 45 sec après, je donne un conseil.
	Announce "Garde Royal: Le Spawn Survivor de type " + $@spawn_type + " commence dans 15 secondes. Dépéchez-vous !",8;
	mapannounce "guild_vs5.gat","Garde Royal: Un conseil: Désactivez les effets avec la commande /effect.",0;
	end;

OnTimer600000: // 10 minutes après on coupe l'accès.
	if (agitcheck(0) != 0) goto L_LancementWoE;
	if ((getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20)) > 1) goto L_LancementEvent; // au moins 2 joueurs...

	if ((getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20)) == 1) goto L_un_seul_joueur;
	Announce "Garde Royal: Aucun joueur ne s'est présenté pour le Spawn Survivor. L'événement a été arrêté.",8;
	callfunc "close_spawn";
	end;

L_un_seul_joueur:
	Announce "Garde Royal: Un seul joueur s'est présenté pour le Spawn Survivor. L'événement a été arrêté.",8;
	mapannounce "guild_vs5.gat","Garde Royal: Le joueur présent doit emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	callfunc "close_spawn";
	end;

L_LancementWoE:
	announce "Le Spawn Survivor est arreté pour cause de WoE.",0;
	mapannounce "guild_vs5.gat","Garde Royal: Les joueurs présents doivent emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	callfunc "close_spawn";
	end;

L_LancementEvent:
	stopnpctimer;
	donpcevent "Surviv::OnStart";
	end;
}
