//===== eAthena Script =======================================
//= Spawn Survivor de Sapho
//===== By: ==================================================
//= Garion, GAlion, DaVinci, Jondalar, Kheldar
//===== Current Version: =====================================
//= 2.1
//===== Compatible With: =====================================
//= Espérons, Nezumi, JAthena, et EAthena
//===== Description: =========================================
//= 1.0.
//= 1.1 - déplacement de la fonction f_monstres au début
//= 1.2 - harmonisation warp warpret -> warprep
//=       changement getmapusers -> getmapaliveusers
//= 1.3 - guild_vs4 -> guild_vs4.gat
//= 1.4 - pvpoff/pvpon/gvgoff/gvgon fixées
//= 1.5 - nombre de monstre! 5xnb de joueurs -> 5x(nb de joueurs + rnd(1,3))
//=       maximum passé de 100 à 150 (c'est une petite carte)
//=       mapannounce placés avant les appels aux fonctions
//=       Suppression des 'removeflag' à la fin de l'event.
//=       Ajout d'un second warp pour sortir.
//=       Respawn de monstre à mi-temps si les joueurs sont trop efficaces.
//= 1.6   Correction chonchon 1063->1011 (spawn mi-temps)
//=       Reset de la variable $@spawn_rnd apèrs usage (spawn mi-temps)
//=       Ajout de poring pour faire patienter les joueurs dans la salle au début
//=       Activation de l'event tous les jours à 01h00.
//=       gain: 1000 zenys au gagnant (en attendant mieux).
//= 1.7   pas de message "Nettoyage" s'il n'y a pas de monstre
//=       Ajout d'un message sur la map dans les spawn des monstres qui font patienter l'event
//=       Démarrage automatique: activation de l'event (enablenpc)
//=       ajout du check du dernier mob spawné.
//=       Ajout d'un test pour savoir quand c'est terminé (tous les mobs tués)
//=       Modification du test pour respawner (respawn lorsqu'il reste moins de 20% des mobs).
//=       Reset de la variable $@var après usage.
//=       Changement de map: guild_vs4.gat -> guild_vs5.gat
//=       Information du nombre de survivant en message serveur (pas uniquement en message map).
//=       Ajout d'un message indiquant le nombre de monstres restant sur les spawns précédents.
//=       Indication du nombre de monstres restants à tuer après le dernier spawn.
//=       Gain: 1000z->5000z en attendant mieux.
//=       Changement de nom: xxx affamé -> xxx carnivore.
//=       Au chargement du NPC, désactiver le NPC Surviv
//=       Au chargement du NPC, tuer tous les monstres
//=       Reset $@nb_part, $@nb_mobs et $@nb_part_en_vie à la fin de l'event
//=       Rappel des règles au début de l'event
//=       Modification de l'heure: 13h50->13h30 (le dernier a duré 3h!)
//=       Check des resurrections.
//=       Installation de 4 sorties.
//= 1.8   nombre de monstres: x5 -> x6 (mini: 30->50, maxi: 150->200)
//=       initialisation des variables à 0 au chargement du npc (OnInit)
//=       ne pas spawner si l'event n'est pas en cours.
//=       amélioration de l'indication du nombre de mobs des spawns précédents.
//=       ajout de messages pour les spawns à mi-temps.
//=       ajout de skeletons en monstres de mi-temps.
//=       $@nb_part_en_vie -> $@survivants
//=       correction test d'affichage du nombre de monstres restants à la fin
//=       Amélioration du controle des résurrections (test à chaque mort d'un monstre)
//= 1.9   Fin des warps (disablenpc) dans close_spawn
//=       Ajout de l'event OnInit dans le NPC surviv
//=       Ajout d'un message 2 minutes avant le début de l'event
//=       Changement couleur 'activer' et 'arrêter' (trop pale)
//=       Gain: 5.000z->10.000z en attendant mieux.
//=       Mauvais usages 'close' et 'end' corrigés
//=       usage 'return' dans les fonctions.
//=       respawner s'il reste moins de 25% des mobs, et non moins de 20%.
//=       remplacement de certain 'doevent' par des 'donpcevent'
//= 2.0   ne pas démarrer l'event en automatique s'il est déjà actif ou si la WoE est en cours.
//=       suppression du flood du garde royal si le nombre de participants ne change pas (message uniquement local)
//=       ajout de fabres et willows en monstres de mi-temps.
//=       Ne pas démarrer l'événement s'il n'y a qu'un joueur ou aucun.
//= 2.1   Si les joueurs tuent trop vite les monstres, augmenter de 5 le nombre de spawn.
//=       Ne pas afficher le message "Voici de quoi vous entraîner en attendant..." lorsque le nombre de spawns est faible.
//=       Désactivation des sorties uniquement durant l'event.
//=       Nouveau message pour sortir: utilisez les warps.
//=       Restructuration pour rendre plus indépendant le npc d'avant event et le npc de l'event.
//=       changement de mot: Salle->arène
//=       Sans joueur dans l'arène, ne pas spawner les monstres qui font patienter.
//=       Suppression de $@var.
//=       Ajout d'un test: ne pas spawner des monstres à mi-temps si l'event n'est pas en cours
//=       Ajout d'un test: ne pas spawner des monstres avant l'event si celui n'est pas lancé
//=       Correction timer mi-temps spawn 29: 2810000->2910000
//=       Ajout de 2 messages pour indiquer le nombre de participants dans l'arène avant l'event.
//=       Check WoE au lancement de l'event.
//=       Ajout d'un message indiquant que si on arrive en retard, on ne pourra pas entrer.
//=       Réorganisation premier message dans l'arène.
//=       Changement couleur 'activer': En vert plutôt que rouge.
//= 2.2   Tous les jours à 2h00, 10h00, 23h30 et le samedi à 13h30
//=       Passage du maximum de monstres spawnés à 300 au lieu de 200.
//=       Test plus régulier de l'efficacité des joueurs (pour augmenter le nombre de spawns si nécessaire).
//=       Ajout spawn liste plus dure
//=       Choix de la liste par le GM: 1, 2, mélange des 2, ou hasard
//= 2.3   Meilleure gestion du nombre de spawns.
//=       Interdiction de l'event aux joueurs bani du 'main'.
//===== Additional Comments: =================================
//============================================================

// les Warps
// ---------
guild_vs5.gat,50,76	warp	warprep	2,3,prontera.gat,165,151
guild_vs5.gat,78,49	warp	warprep2	2,3,prontera.gat,165,151
guild_vs5.gat,49,23	warp	warprep3	2,3,prontera.gat,165,151
guild_vs5.gat,20,50	warp	warprep4	2,3,prontera.gat,165,151

prontera.gat,178,148,4	script	warpspawn	45,2,2,{
OnTouch:
	if(getgmlevel(0)== 0) goto L_noss;
	warp "guild_vs5",56,49;
	end;

L_noss:
	mes "[GM Team]";
	mes "Vous n'avez pas le droit de participer au Spawn Survivor.";
	mes "L'accés est autorisé aux joueurs respectant les régles du serveur.";
	mes "Au revoir.";
	close;
}


// Fin de l'event
// --------------
function	script	close_spawn	{
// Ne pas permettre les flags à la fin de l'event.
// S'il y a des survivants, cela leur permettrait de se battre, etc...
//	removemapflag "guild_vs5",mf_nopvp;
//	removemapflag "guild_vs5",mf_nomemo;
//	removemapflag "guild_vs5",mf_nobranch;
//	removemapflag "guild_vs5",mf_pvp_noguild;
//	removemapflag "guild_vs5",mf_nopenalty;
//	removemapflag "guild_vs5",mf_nozenypenalty;
//	pvpon "guild_vs5.gat";
//	gvgon "guild_vs5.gat";
	killmonsterall "guild_vs5.gat";
	disablenpc "warpspawn";
	enablenpc "warprep";
	enablenpc "warprep2";
	enablenpc "warprep3";
	enablenpc "warprep4";
	set $@Spawn_flag,0; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	set $@nb_part,0;
	set $@nb_part2,0;
	set $@survivants,0;
	set $@nb_mobs,0;
	set $@spawn_type,0;

	return;
}


// Spawn des monstres
// ------------------
function	script	f_monstres	{
	set $@nb_part,getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20); // joueurs vivants moins GMs vivants
	if ($@nb_part < 1) goto L_stop;
	if (agitcheck(0) != 0) goto L_woe;
	if ($@nb_part > $@survivants) goto L_triche; // quelqu'un a été téléporté ou rescussité
	set $@nb_mobs, $@nb_mobs - (($@survivants - $@nb_part) * 2); // réduire de 2 le nombre de spawn par mort
	set $@survivants, $@nb_part;

	// ne pas spawner si l'event n'est pas en cours (juste une sécurité)
	if ($@Spawn_flag < 2) return; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné

	// augmenter de 5 le nombre de spawns, si les joueurs tuent trop vite les mobs (sans dépasser 300)
	set $@NbMapMobs, GetMapMobs("guild_vs5.gat");
	if ($@NbMapMobs < ($@nb_mobs / 10)) set $@nb_mobs,$@nb_mobs + 5;
	if ($@nb_mobs > 300) set $@nb_mobs,300;
	if ($@nb_mobs < 50) set $@nb_mobs,50;

	// spawn des monstres
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Survivor",getarg(0),$@nb_mobs,"Surviv::OnMortMob";

	if ($@nb_part2 == $@nb_part) goto Annonce_map; // $@nb_part2: pour afficher en global (announce) le nombre de partipants (quand ca change), sinon seulement en (mapannounce)
	announce "Garde Royal: Encore " + $@nb_part + " participants en lice pour le titre de Master Survivor!",0;
	set $@nb_part2, $@nb_part;
	goto Suite_annonce;

Annonce_map:
	mapannounce "guild_vs5.gat","Garde Royal: Encore " + $@nb_part + " participants en lice pour le titre de Master Survivor!",0;
	goto Suite_annonce;

Suite_annonce:
	// indication du nombre de monstres restant des spawns précédents
	if ($@NbMapMobs < 1) goto Suite_spawn;
	if ($@NbMapMobs == 1) goto Suite_annonce1; // évite le 's' à monstres
	mapannounce "guild_vs5.gat","Il reste encore " + $@NbMapMobs + " monstres des spawns précédents...",0;
	goto Suite_spawn;

Suite_annonce1:
	mapannounce "guild_vs5.gat","Il reste encore 1 monstre des spawns précédents...",0;
	goto Suite_spawn;

Suite_spawn:
	set $@NbMapMobs, 0;
	mapannounce "guild_vs5.gat","Invasion de '"+ strmobinfo(2,getarg(0))+"'.",0;
	return;

L_stop:
	announce "L'arène du Spawn Survivor est vide (ou tous les partipants sont morts).",0;
	announce "L'évent s'est arrêté de lui-même.",0;
	goto L_fin;

L_woe:
	announce "Le Spawn Survivor est arreté pour cause de WoE.",0;
	mapannounce "guild_vs5.gat","Garde Royal: Les joueurs présents doivent emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	goto L_fin;

L_triche:
	announce "Le Spawn Survivor est arreté pour cause de TRICHE!",0;
	announce "Un joueur a été téléporté l'arène ou rescussité!",0;
	mapannounce "guild_vs5.gat","Garde Royal: Les joueurs présents doivent emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	goto L_fin;

L_fin:
	doevent "Surviv::L_stoptimer";
	return;
}


// fonction testant si les joueurs sont trop efficaces afin de respawner à mi-temps d'autres monstres pour les occuper
// -------------------------------------------------------------------------------------------------------------------
function	script	check_monstres	{
	if (agitcheck(0) != 0) goto return;
	// ne pas spawner si l'event n'est pas en cours (juste une sécurité)
	if ($@Spawn_flag != 2) return; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné

	if (GetMapMobs("guild_vs5.gat") >= ($@nb_mobs / 4)) return;

	// augmenter de 5 le nombre de spawns, les joueurs tuent trop vite les mobs (sans dépasser 300)
	set $@nb_mobs, $@nb_mobs + 5; // test mini/maxi au moment du spawn

	// respawner des monstres si les joueurs les tuent trop vite
	set $@spawn_rnd, rand(1,8);
	if ($@spawn_rnd == 1) goto rnd1;
	if ($@spawn_rnd == 2) goto rnd2;
	if ($@spawn_rnd == 3) goto rnd3;
	if ($@spawn_rnd == 4) goto rnd4;
	if ($@spawn_rnd == 5) goto rnd5;
	if ($@spawn_rnd == 6) goto rnd6;
	goto Repeter_dernier;

Repeter_dernier:
	// le dernier monstre répété
	mapannounce "guild_vs5.gat","Garde Royal: Voici une seconde vague de '" + strmobinfo(2,getarg(0)) + "'.",0;
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Survivor",getarg(0),$@nb_mobs,"Surviv::OnMortMob";
	set $@spawn_rnd, 0;
	return;

rnd1:
	// porings
	mapannounce "guild_vs5.gat","Garde Royal: Voici de quoi vous passer le temps...",0;
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Pour patienter...",1002,$@nb_mobs,"Surviv::OnMortMob";
	set $@spawn_rnd, 0;
	return;

rnd2:
	// fabres
	mapannounce "guild_vs5.gat","Garde Royal: Des vers attirés par les monstres morts sont apparus. Merci de nettoyer l'arène...",0;
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Vers nécrophage",1007+2000,$@nb_mobs,"Surviv::OnMortMob"; // +2000 pour 'petit' monstre
	set $@spawn_rnd, 0;
	return;

rnd3:
	// lunatics
	mapannounce "guild_vs5.gat","Garde Royal: Des lapinoux carnivores se sont échappés du zoo royal. Merci de nous en débarasser...",0;
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Lapinou carnivore",1063+2000,$@nb_mobs,"Surviv::OnMortMob"; // +2000 pour 'petit' monstre
	set $@spawn_rnd, 0;
	return;

rnd4:
	// Willows
	mapannounce "guild_vs5.gat","Garde Royal: Une driade a invoquée des arbres de l'enfer. Merci de détruire ces creatures d'un autre monde...",0;
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Arbre satanique",1010,$@nb_mobs,"Surviv::OnMortMob";
	set $@spawn_rnd, 0;
	return;

rnd5:
	// ChonChons
	mapannounce "guild_vs5.gat","Garde Royal: Le sang a attiré des Moustiques. Faîtes attention à vous...",0;
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Moustique",1011+2000,$@nb_mobs,"Surviv::OnMortMob"; // +2000 pour 'petit' monstre
	set $@spawn_rnd, 0;
	return;

rnd6:
	// Skeletons
	mapannounce "guild_vs5.gat","Garde Royal: Un nécromancien vient de ranimer les monstres morts. Restez sur vos gardes...",0;
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Monstre mort-vivant",1076,$@nb_mobs,"Surviv::OnMortMob";
	set $@spawn_rnd, 0;
	return;
}


// NPC principal de l'event
// ------------------------
guild_vs5.gat,51,49,1	script	Surviv	-1,{
	end;

// initialisation
OnInit:
	stopnpctimer;
	end;

OnStart:
	set $@Spawn_flag,2; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	Announce "Garde Royal: Le Spawn Survivor commence, l'accès en est coupé.",8;
	disablenpc "warpspawn";
	disablenpc "warprep";
	disablenpc "warprep2";
	disablenpc "warprep3";
	disablenpc "warprep4";
	initnpctimer;

	// Détermination du type de spawn
	if ($@spawn_type == 0) set $@spawn_type, rand(1,3);
	if ($@spawn_type == 2) goto L_spawntype2;
	if ($@spawn_type == 3) goto L_spawntype3;
	goto L_spawntype1; // par défaut, le type 'sympa'

L_spawntype1:
	set $@spawn1,1002; // Poring
	set $@spawn2,1063; // Lunatic
	set $@spawn3,1011; // ChonChon
	set $@spawn4,1008; // Pupa
	set $@spawn5,1031; // Poporing

	set $@spawn6,1015; // Zombie
	set $@spawn7,1056; // Smokie
	set $@spawn8,1068; // Hydra
	set $@spawn9,1077; // Poison Spore
	set $@spawn10,1105; // Deniro

	set $@spawn11,1178; // Zerom
	set $@spawn12,1030; // Anacondaq
	set $@spawn13,1145; // Martin
	set $@spawn14,1100; // Argos
	set $@spawn15,1392; // Rotar Zairo

	set $@spawn16,1060; // Bigfoot
	set $@spawn17,1067; // Cornutus
	set $@spawn18,1064; // Megalodon
	set $@spawn19,1106; // Desert Wolf
	set $@spawn20,1258; // Goblin Archer

	set $@spawn21,1119; // Frilldora
	set $@spawn22,1141; // Marina
	set $@spawn23,1127; // Hode
	set $@spawn24,1146; // Matyr
	set $@spawn25,1282; // Kobold Archer

	set $@spawn26,1110; // Dokebi
	set $@spawn27,1248; // Cruiser
	set $@spawn28,1026; // Munak
	set $@spawn29,1471; // Nine Tail
	set $@spawn30,1261; // Wild Rose

	set $@spawn31,1016; // Skeleton Archer
	set $@spawn32,1400; // Karakasa
	set $@spawn33,1138; // Magnolia
	set $@spawn34,1165; // Sandman
	set $@spawn35,1249; // Myst Case

	set $@spawn36,1403; // Firelock Soldier
	set $@spawn37,1040; // Golem
	set $@spawn38,1680; // Hill Wind
	set $@spawn39,1099; // Argiope
	set $@spawn40,1209; // Cramp

	set $@spawn41,1029; // Isis
	set $@spawn42,1144; // Marse
	set $@spawn43,1274; // Megalith
	set $@spawn44,1102; // Bathory
	set $@spawn45,1715; // Novus

	set $@spawn46,1170; // Sohee
	set $@spawn47,1156; // Sky Petite
	set $@spawn48,1215; // Stem Worm
	set $@spawn49,1213; // High Orc
	set $@spawn50,1271; // Alligator
	goto Suite_onstart;

L_spawntype2:
	set $@spawn1,1048; // Thief Bug Egg
	set $@spawn2,1049; // Picky
	set $@spawn3,1010; // Willow
	set $@spawn4,1012; // Roda Frog
	set $@spawn5,1167; // Savage Babe

	set $@spawn6,1018; // Creamy
	set $@spawn7,1033; // Elder Willow
	set $@spawn8,1176; // Vitata
	set $@spawn9,1265; // Cookie
	set $@spawn10,1124; // Goblin 4 (Poison)

	set $@spawn11,1001; // Scorpion
	set $@spawn12,1111; // Drainliar
	set $@spawn13,1103; // Caramel
	set $@spawn14,1153; // Orc Zombie
	set $@spawn15,1494; // Beetle King

	set $@spawn16,1129; // Horong
	set $@spawn17,1162; // Rafflesia
	set $@spawn18,1620; // Noxious
	set $@spawn19,1246; // Cookie Xmas
	set $@spawn20,1409; // Dumpling Child

	set $@spawn21,1121; // Giearth
	set $@spawn22,1280; // Goblin Steamrider
	set $@spawn23,1415; // Baby Leopard
	set $@spawn24,1169; // Skeleton Worker
	set $@spawn25,1143; // Marionette

	set $@spawn26,1165; // Sandman
	set $@spawn27,1199; // Punk
	set $@spawn28,1142; // Marine Sphere
	set $@spawn29,1151; // Myst
	set $@spawn30,1253; // Gargoyle

	set $@spawn31,1498; // Wootan Shooter
	set $@spawn32,1069; // Swordfish
	set $@spawn33,1508; // Quve
	set $@spawn34,1621; // Venomous
	set $@spawn35,1263; // Wind Ghost

	set $@spawn36,1276; // Raydric Archer
	set $@spawn37,1032; // Verit
	set $@spawn38,1211; // Brilight
	set $@spawn39,1194; // Arclouze
	set $@spawn40,1210; // Filamentous

	set $@spawn41,1404; // Miyabi Doll
	set $@spawn42,1687; // Grove
	set $@spawn43,1503; // Gibbet
	set $@spawn44,1109; // Deviruchi
	set $@spawn45,1189; // Orc Archer

	set $@spawn46,1260; // Dark Frame
	set $@spawn47,1506; // Disguise
	set $@spawn48,1664; // Photon Canon
	set $@spawn49,1321; // Dragon Tail
	set $@spawn50,1383; // Explosion
	goto Suite_onstart;

L_spawntype3:
	set $@spawn1,1002; // Poring
	if (rand(1,2) == 1) set $@spawn1,1048; // Thief Bug Egg
	set $@spawn2,1063; // Lunatic
	if (rand(1,2) == 1) set $@spawn2,1049; // Picky
	set $@spawn3,1011; // ChonChon
	if (rand(1,2) == 1) set $@spawn3,1010; // Willow
	set $@spawn4,1008; // Pupa
	if (rand(1,2) == 1) set $@spawn4,1012; // Roda Frog
	set $@spawn5,1031; // Poporing
	if (rand(1,2) == 1) set $@spawn5,1167; // Savage Babe

	set $@spawn6,1015; // Zombie
	if (rand(1,2) == 1) set $@spawn6,1018; // Creamy
	set $@spawn7,1056; // Smokie
	if (rand(1,2) == 1) set $@spawn7,1033; // Elder Willow
	set $@spawn8,1068; // Hydra
	if (rand(1,2) == 1) set $@spawn8,1176; // Vitata
	set $@spawn9,1077; // Poison Spore
	if (rand(1,2) == 1) set $@spawn9,1265; // Cookie
	set $@spawn10,1105; // Deniro
	if (rand(1,2) == 1) set $@spawn10,1124; // Goblin 4 (Poison)

	set $@spawn11,1178; // Zerom
	if (rand(1,2) == 1) set $@spawn11,1001; // Scorpion
	set $@spawn12,1030; // Anacondaq
	if (rand(1,2) == 1) set $@spawn12,1111; // Drainliar
	set $@spawn13,1145; // Martin
	if (rand(1,2) == 1) set $@spawn13,1103; // Caramel
	set $@spawn14,1100; // Argos
	if (rand(1,2) == 1) set $@spawn14,1153; // Orc Zombie
	set $@spawn15,1392; // Rotar Zairo
	if (rand(1,2) == 1) set $@spawn15,1494; // Beetle King

	set $@spawn16,1060; // Bigfoot
	if (rand(1,2) == 1) set $@spawn16,1129; // Horong
	set $@spawn17,1067; // Cornutus
	if (rand(1,2) == 1) set $@spawn17,1162; // Rafflesia
	set $@spawn18,1064; // Megalodon
	if (rand(1,2) == 1) set $@spawn18,1620; // Noxious
	set $@spawn19,1106; // Desert Wolf
	if (rand(1,2) == 1) set $@spawn19,1246; // Cookie Xmas
	set $@spawn20,1258; // Goblin Archer
	if (rand(1,2) == 1) set $@spawn20,1409; // Dumpling Child

	set $@spawn21,1119; // Frilldora
	if (rand(1,2) == 1) set $@spawn21,1121; // Giearth
	set $@spawn22,1141; // Marina
	if (rand(1,2) == 1) set $@spawn22,1280; // Goblin Steamrider
	set $@spawn23,1127; // Hode
	if (rand(1,2) == 1) set $@spawn23,1415; // Baby Leopard
	set $@spawn24,1146; // Matyr
	if (rand(1,2) == 1) set $@spawn24,1169; // Skeleton Worker
	set $@spawn25,1282; // Kobold Archer
	if (rand(1,2) == 1) set $@spawn25,1143; // Marionette

	set $@spawn26,1110; // Dokebi
	if (rand(1,2) == 1) set $@spawn26,1165; // Sandman
	set $@spawn27,1248; // Cruiser
	if (rand(1,2) == 1) set $@spawn27,1199; // Punk
	set $@spawn28,1026; // Munak
	if (rand(1,2) == 1) set $@spawn28,1142; // Marine Sphere
	set $@spawn29,1471; // Nine Tail
	if (rand(1,2) == 1) set $@spawn29,1151; // Myst
	set $@spawn30,1261; // Wild Rose
	if (rand(1,2) == 1) set $@spawn30,1253; // Gargoyle

	set $@spawn31,1016; // Skeleton Archer
	if (rand(1,2) == 1) set $@spawn31,1498; // Wootan Shooter
	set $@spawn32,1400; // Karakasa
	if (rand(1,2) == 1) set $@spawn32,1069; // Swordfish
	set $@spawn33,1138; // Magnolia
	if (rand(1,2) == 1) set $@spawn33,1508; // Quve
	set $@spawn34,1165; // Sandman
	if (rand(1,2) == 1) set $@spawn34,1621; // Venomous
	set $@spawn35,1249; // Myst Case
	if (rand(1,2) == 1) set $@spawn35,1263; // Wind Ghost

	set $@spawn36,1403; // Firelock Soldier
	if (rand(1,2) == 1) set $@spawn36,1276; // Raydric Archer
	set $@spawn37,1040; // Golem
	if (rand(1,2) == 1) set $@spawn37,1032; // Verit
	set $@spawn38,1680; // Hill Wind
	if (rand(1,2) == 1) set $@spawn38,1211; // Brilight
	set $@spawn39,1099; // Argiope
	if (rand(1,2) == 1) set $@spawn39,1194; // Arclouze
	set $@spawn40,1209; // Cramp
	if (rand(1,2) == 1) set $@spawn40,1210; // Filamentous

	set $@spawn41,1029; // Isis
	if (rand(1,2) == 1) set $@spawn41,1404; // Miyabi Doll
	set $@spawn42,1144; // Marse
	if (rand(1,2) == 1) set $@spawn42,1687; // Grove
	set $@spawn43,1274; // Megalith
	if (rand(1,2) == 1) set $@spawn43,1503; // Gibbet
	set $@spawn44,1102; // Bathory
	if (rand(1,2) == 1) set $@spawn44,1109; // Deviruchi
	set $@spawn45,1715; // Novus
	if (rand(1,2) == 1) set $@spawn45,1189; // Orc Archer

	set $@spawn46,1170; // Sohee
	if (rand(1,2) == 1) set $@spawn46,1260; // Dark Frame
	set $@spawn47,1156; // Sky Petite
	if (rand(1,2) == 1) set $@spawn47,1506; // Disguise
	set $@spawn48,1215; // Stem Worm
	if (rand(1,2) == 1) set $@spawn48,1664; // Photon Canon
	set $@spawn49,1213; // High Orc
	if (rand(1,2) == 1) set $@spawn49,1321; // Dragon Tail
	set $@spawn50,1271; // Alligator
	if (rand(1,2) == 1) set $@spawn50,1383; // Explosion
	goto Suite_onstart;

Suite_onstart:
	set $@nb_part,getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20); // alive players less alive GMs
	set $@survivants,$@nb_part; // pour tester les cas de triche
	set $@nb_part2,$@nb_part; // $@nb_part2: pour afficher en global (announce) le nombre de partipants (quand ca change), sinon seulement en (mapannounce)
	set $@nb_mobs,($@nb_part + rand(1,4)) * 6; // test mini/maxi au moment du spawn

	announce "Il y a " + $@nb_part + " participants pour le titre de Master Survivor. Bonne chance!",0;
	mapannounce "guild_vs5.gat","Garde Royal: Pour devenir le Master Survivor, il vous faut tuer un monstre en étant le dernier survivant!",0;
	mapannounce "guild_vs5.gat","Garde Royal: Règle importante: Il est INTERDIT de téléporter un joueur dans l'arène ou de rescussiter un joueur.",0;
	mapannounce "guild_vs5.gat","Garde Royal: 30 secondes entre chaque spawn de monstres différents. Survivez !",0; //Première slave.
	callfunc "f_monstres", $@spawn1;
	end;

OnTimer30000:
	callfunc "f_monstres", $@spawn2;
	end;

OnTimer60000:
	callfunc "f_monstres", $@spawn3;
	end;

OnTimer90000:
	callfunc "f_monstres", $@spawn4;
	end;

OnTimer120000:
	mapannounce "guild_vs5.gat","Garde Royal: 60 secondes entre chaque spawn de monstres différents.",0;
	callfunc "f_monstres", $@spawn5;
	end;

OnTimer180000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Continuons à monter en puissance...",0;
	callfunc "f_monstres", $@spawn6;
	end;

OnTimer240000:
	callfunc "f_monstres", $@spawn7;
	end;

OnTimer300000:
	callfunc "f_monstres", $@spawn8;
	end;

OnTimer360000:
	callfunc "f_monstres", $@spawn9;
	end;

OnTimer420000:
	callfunc "f_monstres", $@spawn10;
	end;

OnTimer480000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Plus difficile maintenant.",0;
	mapannounce "guild_vs5.gat","Garde Royal: une minute 30 entre chaque spawn de monstres différents.",0;
	callfunc "f_monstres", $@spawn11;
	end;
OnTimer525000: // pour patienter (45 sec après le spawn)
	callfunc "check_monstres", $@spawn11;
	end;

OnTimer570000:
	callfunc "f_monstres", $@spawn12;
	end;
OnTimer615000: // pour patienter (45 sec après le spawn)
	callfunc "check_monstres", $@spawn12;
	end;

OnTimer660000:
	callfunc "f_monstres", $@spawn13;
	end;
OnTimer705000: // pour patienter (45 sec après le spawn)
	callfunc "check_monstres", $@spawn13;
	end;

OnTimer750000:
	callfunc "f_monstres", $@spawn14;
	end;
OnTimer795000: // pour patienter (45 sec après le spawn)
	callfunc "check_monstres", $@spawn14;
	end;

OnTimer840000:
	callfunc "f_monstres", $@spawn15;
	end;
OnTimer885000: // pour patienter (45 sec après le spawn)
	callfunc "check_monstres", $@spawn15;
	end;

OnTimer930000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Plus dur maintenant.",0;
	mapannounce "guild_vs5.gat","Garde Royal: 2 minutes entre chaque spawn de monstres différents.",0;
	callfunc "f_monstres" , $@spawn16;
	end;
OnTimer990000: // pour patienter (1 min après le spawn)
	callfunc "check_monstres", $@spawn16;
	end;

OnTimer1050000:
	callfunc "f_monstres", $@spawn17;
	end;
OnTimer1110000: // pour patienter (1 min après le spawn)
	callfunc "check_monstres", $@spawn17;
	end;

OnTimer1170000:
	callfunc "f_monstres", $@spawn18;
	end;
OnTimer1230000: // pour patienter (1 min après le spawn)
	callfunc "check_monstres", $@spawn18;
	end;

OnTimer1290000:
	callfunc "f_monstres", $@spawn19;
	end;
OnTimer1350000: // pour patienter (1 min après le spawn)
	callfunc "check_monstres", $@spawn19;
	end;

OnTimer1410000:
	callfunc "f_monstres", $@spawn20;
	end;
OnTimer1470000: // pour patienter (1 min après le spawn)
	callfunc "check_monstres", $@spawn20;
	end;

OnTimer1530000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Encore plus dur maintenant.",0;
	mapannounce "guild_vs5.gat","Garde Royal: 2 minutes 30 entre chaque spawn de monstres différents.",0;
	callfunc "f_monstres" , $@spawn21;
	end;
OnTimer1605000: // pour patienter (1 min 15 après le spawn)
	callfunc "check_monstres", $@spawn21;
	end;

OnTimer1680000:
	callfunc "f_monstres", $@spawn22;
	end;
OnTimer1755000: // pour patienter (1 min 15 après le spawn)
	callfunc "check_monstres", $@spawn22;
	end;

OnTimer1830000:
	callfunc "f_monstres", $@spawn23;
	end;
OnTimer1905000: // pour patienter (1 min 15 après le spawn)
	callfunc "check_monstres", $@spawn23;
	end;

OnTimer1980000:
	callfunc "f_monstres", $@spawn24;
	end;
OnTimer2055000: // pour patienter (1 min 15 après le spawn)
	callfunc "check_monstres", $@spawn24;
	end;

OnTimer2130000:
	callfunc "f_monstres", $@spawn25;
	end;
OnTimer2205000: // pour patienter (1 min 15 après le spawn)
	callfunc "check_monstres", $@spawn25;
	end;

OnTimer2280000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Encore plus difficile maintenant.",0;
	mapannounce "guild_vs5.gat","Garde Royal: 180 secondes entre chaque spawn de monstres différents.",0;
	callfunc "f_monstres", $@spawn26;
	end;
OnTimer2370000: // pour patienter (1 min 30 après le spawn)
	callfunc "check_monstres", $@spawn26;
	end;

OnTimer2460000:
	callfunc "f_monstres", $@spawn27;
	end;
OnTimer2550000: // pour patienter (1 min 30 après le spawn)
	callfunc "check_monstres", $@spawn27;
	end;

OnTimer2640000:
	callfunc "f_monstres", $@spawn28;
	end;
OnTimer2730000: // pour patienter (1 min 30 après le spawn)
	callfunc "check_monstres", $@spawn28;
	end;

OnTimer2820000:
	callfunc "f_monstres", $@spawn29;
	end;
OnTimer2910000: // pour patienter (1 min 30 après le spawn)
	callfunc "check_monstres", $@spawn29;
	end;

OnTimer3000000:
	callfunc "f_monstres", $@spawn30;
	end;
OnTimer3090000: // pour patienter (1 min 30 après le spawn)
	callfunc "check_monstres", $@spawn30;
	end;

OnTimer3180000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Passons aux choses sérieuses...",0;
	mapannounce "guild_vs5.gat","Garde Royal: 3 minutes 30 entre chaque spawn de monstres différents.",0;
	callfunc "f_monstres", $@spawn31;
	end;
OnTimer3285000: // pour patienter (1 min 45 après le spawn)
	callfunc "check_monstres", $@spawn31;
	end;

OnTimer3390000:
	callfunc "f_monstres", $@spawn32;
	end;
OnTimer3495000: // pour patienter (1 min 45 après le spawn)
	callfunc "check_monstres", $@spawn32;
	end;

OnTimer3600000:
	callfunc "f_monstres", $@spawn33;
	end;
OnTimer3705000: // pour patienter (1 min 45 après le spawn)
	callfunc "check_monstres", $@spawn33;
	end;

OnTimer3810000:
	callfunc "f_monstres", $@spawn34;
	end;
OnTimer3915000: // pour patienter (1 min 45 après le spawn)
	callfunc "check_monstres", $@spawn34;
	end;

OnTimer4020000:
	callfunc "f_monstres", $@spawn35;
	end;
OnTimer4125000: // pour patienter (1 min 45 après le spawn)
	callfunc "check_monstres", $@spawn35;
	end;

OnTimer4230000:
	callfunc "f_monstres", $@spawn36;
	end;
OnTimer4335000: // pour patienter (1 min 45 après le spawn)
	callfunc "check_monstres", $@spawn36;
	end;

OnTimer4440000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Après ces mises en bouches... le plat principal.",0;
	mapannounce "guild_vs5.gat","Garde Royal: 4 minutes entre chaque spawn de monstres différents.",0;
	callfunc "f_monstres", $@spawn37;
	end;
OnTimer4560000: // pour patienter (2 min après le spawn)
	callfunc "check_monstres", $@spawn37;
	end;

OnTimer4680000:
	callfunc "f_monstres", $@spawn38;
	end;
OnTimer4800000: // pour patienter (2 min après le spawn)
	callfunc "check_monstres", $@spawn38;
	end;

OnTimer4920000:
	callfunc "f_monstres", $@spawn39;
	end;
OnTimer5040000: // pour patienter (2 min après le spawn)
	callfunc "check_monstres", $@spawn39;
	end;

OnTimer5160000:
	callfunc "f_monstres", $@spawn40;
	end;
OnTimer5280000: // pour patienter (2 min après le spawn)
	callfunc "check_monstres", $@spawn40;
	end;

OnTimer5400000:
	callfunc "f_monstres", $@spawn41;
	end;
OnTimer5520000: // pour patienter (2 min après le spawn)
	callfunc "check_monstres", $@spawn41;
	end;

OnTimer5640000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Vous avez demandez plus fort...",0;
	mapannounce "guild_vs5.gat","Garde Royal: 4 minutes 30 entre chaque spawn de monstres différents.",0;
	callfunc "f_monstres", $@spawn42;
	end;
OnTimer5775000: // pour patienter (2 min 15 après le spawn)
	callfunc "check_monstres", $@spawn42;
	end;

OnTimer5910000:
	callfunc "f_monstres", $@spawn43;
	end;
OnTimer6045000: // pour patienter (2 min 15 après le spawn)
	callfunc "check_monstres", $@spawn43;
	end;

OnTimer6180000:
	callfunc "f_monstres", $@spawn44;
	end;
OnTimer6315000: // pour patienter (2 min 15 après le spawn)
	callfunc "check_monstres", $@spawn44;
	end;

OnTimer6450000:
	callfunc "f_monstres", $@spawn45;
	end;
OnTimer6585000: // pour patienter (2 min 15 après le spawn)
	callfunc "check_monstres", $@spawn45;
	end;

OnTimer6720000:
	callfunc "f_monstres", $@spawn46;
	end;
OnTimer6855000: // pour patienter (2 min 15 après le spawn)
	callfunc "check_monstres", $@spawn46;
	end;

OnTimer6990000:
	mapannounce "guild_vs5.gat","Garde Royal: Bravo, aux survivants ! Ok, vous allez voir maintenant...",0;
	mapannounce "guild_vs5.gat","Garde Royal: 5 minutes entre chaque spawn de monstres différents.",0;
	callfunc "f_monstres", $@spawn47;
	end;
OnTimer7140000: // pour patienter (2 min 30 après le spawn)
	callfunc "check_monstres", $@spawn47;
	end;

OnTimer7290000:
	callfunc "f_monstres", $@spawn48;
	end;
OnTimer7440000: // pour patienter (2 min 30 après le spawn)
	callfunc "check_monstres", $@spawn48;
	end;

OnTimer7590000:
	mapannounce "guild_vs5.gat","Garde Royal: Avant dernier spawn. Ensuite, nous vous laissons 10 minutes avant le dernier...",0;
	callfunc "f_monstres", $@spawn49;
	end;
// pas de monstres pour patienter

OnTimer8190000:
	mapannounce "guild_vs5.gat","Garde Royal: Attention, dernier spawn ! Serez-vous les Masters Survivors ?!",0;
	callfunc "f_monstres", $@spawn50;
	set $@Spawn_flag,3; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	end;

// --------------------------
OnMortMob: // à chaque mort de mob
	set $@nb_part,getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20); // joueurs vivants moins GMs vivants
	if ($@nb_part > $@survivants) goto L_tricheur; // quelqu'un a été téléporté ou rescussité
	set $@nb_mobs, $@nb_mobs - (($@survivants - $@nb_part) * 2); // réduire de 2 le nombre de spawn par mort
	set $@survivants, $@nb_part;

	// un seul survivant
	if ($@nb_part == 1) goto Le_Gagnant;
	// note: pour tuer un monstre, il faut un joueur vivant, donc le test == 0 est inutile

// Ce n'est pas le dernier spawn -> continuer
	if ($@Spawn_flag != 3) end; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné

// affichage special après le dernier spawn
	set $@Mob_a_tuer, GetMapMobs("guild_vs5.gat");
	if ($@Mob_a_tuer != 500 && $@Mob_a_tuer != 400 && $@Mob_a_tuer != 300 && $@Mob_a_tuer != 200 && $@Mob_a_tuer != 100 && $@Mob_a_tuer != 50 && $@Mob_a_tuer != 10 && $@Mob_a_tuer != 5) goto OnMortMob_sans_quantity;
	mapannounce "guild_vs5.gat","Garde Royal: Encore " + $@Mob_a_tuer +" monstres à tuer.",0;
	set $@Mob_a_tuer, 0;
	end;

OnMortMob_sans_quantity:
	set $@Mob_a_tuer, 0;

	// event terminé (plus de monstres)?
	if (GetMapMobs("guild_vs5.gat") > 0) end;

// Plusieurs gagnants
	announce "Nous avons plusieurs Masters Survivors dans le Spawn Survivor!",0;
	mapannounce "guild_vs5.gat","Garde Royal: Vous devez emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	goto L_gagnant_suite;

// 1 gagnant!
Le_Gagnant:
	announce "Nous avons un ultime survivant dans le Spawn Survivor!",0;
	announce "Le Master Survivor est: "+ strcharinfo(0) + ".",0;

	// le prix du gagnant
	announce strcharinfo(0) + " gagne 10.000 zenys.",0;
	set Zeny,Zeny + 10000;

	mapannounce "guild_vs5.gat","Garde Royal: "+ strcharinfo(0) + " doit emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	goto L_gagnant_suite;

L_gagnant_suite:
	if ((getmapusers3("guild_vs5.gat") - getmapgms3("guild_vs5.gat",20)) < 1) goto L_stoptimer; // pas de mort sur la carte
	mapannounce "guild_vs5.gat","Garde Royal: Les autres, vous pouvez retourner à votre point de sauvegarde (ou deco/reco).",0;
	goto L_stoptimer;

L_tricheur:
	announce "Le Spawn Survivor est arreté pour cause de TRICHE!",0;
	announce "Un joueur a été téléporté dans l'arène ou rescussité!",0;
	mapannounce "guild_vs5.gat","Garde Royal: Les joueurs présents doivent emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	goto L_stoptimer;

L_stoptimer:
	callfunc "close_spawn";
	stopnpctimer;
	end;
}


// NPC extérieur + avant l'event --------------------------------------------


// fonction spawnant des monstres pour faire patienter les joueurs avant l'event
// -----------------------------------------------------------------------------
function	script	before_event	{
	// ne pas spawner si l'event n'est pas en cours (juste une sécurité)
	if ($@Spawn_flag != 1) return; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné

	if ((getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20)) < 1) return; // ne pas spawner si aucun joueur dans l'arène

	set $@spawn_rnd, (rand(51,100) - GetMapMobs("guild_vs5.gat")) / 2; // divisé par 2, car 2 spawns (un normal, un agressif)
	if ($@spawn_rnd < 0) return;
	if ($@spawn_rnd < 10) goto Faire_spawn; // ne pas afficher de message si la quantité est faible
	mapannounce "guild_vs5.gat","Garde Royal: Voici de quoi vous entraîner en attendant...",0;
	goto Faire_spawn;

Faire_spawn:
	areamonster "guild_vs5.gat",0,0,200,200,"Poring",1002,$@spawn_rnd,"";
	areamonsteragro "guild_vs5.gat",0,0,200,200,"Poring carnivore",1002,$@spawn_rnd,"";
	set $@spawn_rnd, 0;
	return;
}


// NPC extérieur (à Prontéra) permettant d'activer l'événement
// -----------------------------------------------------------
prontera.gat,174,154,3	script	Spawner	743,{
	if (getgmlevel(0) < 20) goto L_JoueurMenu;
	menu "Menu spécial GM",L_GmMenu,"Menu Joueur",L_JoueurMenu;
	close;

// texte pour les joueurs
L_JoueurMenu:
	mes "[Spawner]";
	mes "Le Spawn Survivor ne peut être activé que par un GM ou de manière automatisée tous les jours à 02h00, 10h00 et 23h30 et le Samedi à 13h30.";
	next;
	mes "[Spawner]";
	mes "Une fois le Spawn Survivor activé, vous avez 10 minutes pour venir ici et joindre la partie.";
	mes "Si vous arrivez en retard, le jeu se déroulera sans vous.";
	next;
	mes "[Spawner]";
	mes "Quelques règles:";
	mes "- Il est interdit de rescussiter un joueur durant le Spawn Survivor.";
	mes "- Il est interdit de téléporter un joueur dans l'arène durant le Spawn Survivor (pour les GM).";
	next;
	mes "[Spawner]";
	mes "Quelques règles (suite):";
	mes "- L'évènement est interdit à ceux qui n'ont pas le 'main'.";
	mes "- L'évènement ne peut se faire que s'il y a au moins 2 participants.";
	mes "- Le gagnant est l'unique survivant qui tue un monstre (double condition).";
	next;
	mes "[Spawner]";
	mes "Les différents types de Spawn Survivor:";
	mes "- Type 1: plutôt 'sympa'.";
	mes "- Type 2: assez dur'.";
	mes "- Type 3: mélange des types 1 et 2.";
	mes "Au revoir.";
	close;

// initialisation
OnInit:
	killmonsterall "guild_vs5.gat";
	disablenpc "warpspawn";
	// note: laisser les warps de sortie activés
	set $@Spawn_flag,0; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	set $@nb_part,0;
	set $@nb_part2,0;
	set $@survivants,0;
	set $@nb_mobs,0;
	set $@spawn_type,0;
	stopnpctimer;
	end;

// Tous les samedis à 13h30
OnSat1330:
	if (agitcheck(0) != 0) end;
	if ($@Spawn_flag > 0) end; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	if ($@spawn_type == 0) set $@spawn_type, rand(1,3);
	Announce "Garde Royal: Le Spawn Survivor est ouvert (type " + $@spawn_type + ").",8;
	goto L_creawarp;

// Tous les jours à 02h00
OnClock0200:
	if (agitcheck(0) != 0) end;
	if ($@Spawn_flag > 0) end; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	if ($@spawn_type == 0) set $@spawn_type, rand(1,3);
	Announce "Garde Royal: Le Spawn Survivor est ouvert (type " + $@spawn_type + ").",8;
	goto L_creawarp;

// Tous les jours à 10h00
OnClock1000:
	if (agitcheck(0) != 0) end;
	if ($@Spawn_flag > 0) end; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	if ($@spawn_type == 0) set $@spawn_type, rand(1,3);
	Announce "Garde Royal: Le Spawn Survivor est ouvert (type " + $@spawn_type + ").",8;
	goto L_creawarp;

// Tous les jours à 23h30
OnClock2330:
	if (agitcheck(0) != 0) end;
	if ($@Spawn_flag > 0) end; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	if ($@spawn_type == 0) set $@spawn_type, rand(1,3);
	Announce "Garde Royal: Le Spawn Survivor est ouvert (type " + $@spawn_type + ").",8;
	goto L_creawarp;

// Menu GM (activer)
L_GmMenu:
	if (agitcheck(0) != 0) goto L_Gmwoe;
	if ($@Spawn_flag > 0) goto L_GmArreter; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	mes "[Spawner]";
	mes "Voulez-vous ^66FF66activer^000000 le Spawn Survivor?";
	mes "- Type 1: plutôt 'sympa'.";
	mes "- Type 2: assez dur'.";
	mes "- Type 3: mélange des types 1 et 2.";
	menu "Oui (type 1)",L_GMlauch1,"Oui (type 2)",L_GMlauch2,"Oui (type 3)",L_GMlauch3,"Oui (hasard)",L_GMlauch,"Non",L_GmFin;
	close;

L_Gmwoe:
	mes "[Spawner]";
	mes "Vous ne pouvez pas activer maintenant le Spawn Survivor.";
	mes "En effet, la Guerre de l'Emperium est en cours...";
	mes "Désolé.";
	close;

// Menu GM (arrêter)
L_GmArreter:
	mes "[Spawner]";
	mes "Voulez-vous ^FF6666arrêter^000000 le Spawn Survivor?";
	menu "Oui",L_GMclose,"Non",L_GmFin;
	close;

L_GMclose:
	if ($@Spawn_flag == 0) goto L_GMdejaclose; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	close2; // le script continue
	Announce "Garde Royal: " + strcharinfo(0) + " a stoppé le Spawn Survivor.",8;
	mapannounce "guild_vs5.gat","Garde Royal: Les joueurs présents doivent emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	if ($@Spawn_flag > 1) goto L_GMclose_encours; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	callfunc "close_spawn";
	stopnpctimer;
	end;

L_GMclose_encours:
	donpcevent "Surviv::L_stoptimer"; // arrête le timer de l'autre npc en plus
	stopnpctimer;
	end;

L_GMdejaclose:
	mes "[Spawner]";
	mes "Le Spawn Survivor a été arrêté entre temps.";
	mes "Au revoir.";
	close;

L_GmFin:
	mes "[Spawner]";
	mes "Dans ce cas, au revoir.";
	close;

L_GMlauch1:
	set $@spawn_type, 1;
	goto L_GMlauch;

L_GMlauch2:
	set $@spawn_type, 2;
	goto L_GMlauch;

L_GMlauch3:
	set $@spawn_type, 3;
	goto L_GMlauch;

L_GMlauch:
	// si n'est pas défini avant ($@spawn_type == 0), c'est au hasard, mais on le détermine quand même.
	if ($@spawn_type == 0) set $@spawn_type, rand(1,3);
	if ($@Spawn_flag > 0) goto L_GMdejaLauch; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	Announce "Garde Royal: " +strcharinfo(0)+ " a activé le Spawn Survivor de type " + $@spawn_type + ".",8;
	close2; // le script continue
	goto L_creawarp;

L_GMdejaLauch:
	mes "[Spawner]";
	mes "Le Spawn Survivor a été activé entre temps.";
	mes "Au revoir.";
	close;

L_creawarp:
	set $@Spawn_flag,1; // $@Spawn_flag: 0: event pas en cours, 1: avant-event en cours, 2: event en cours, 3: dernier mob spawné
	Announce "Garde Royal: L'évent commence dans 10 minutes.",8;
	Announce "Garde Royal: Rendez-vous dans l'allée au sud de la fontaine de Prontera.",8;
	Announce "Garde Royal: Si vous arrivez en retard, vous ne pourrez pas entrer dans l'arène.",8;
	killmonsterall "guild_vs5.gat";
	enablenpc "warpspawn";
	pvpoff "guild_vs5.gat";
	gvgoff "guild_vs5.gat";
	setmapflag "guild_vs5.gat",mf_nosave;
	setmapflag "guild_vs5.gat",mf_nopvp;
	setmapflag "guild_vs5.gat",mf_nomemo;
	setmapflag "guild_vs5.gat",mf_nobranch;
	setmapflag "guild_vs5.gat",mf_pvp_noguild;
	setmapflag "guild_vs5.gat",mf_nopenalty;
	setmapflag "guild_vs5.gat",mf_nozenypenalty;
	initnpctimer;
	end;

OnTimer60000:
	callfunc "before_event"; // 1 minute, spawn de montres pour patienter.
	end;

OnTimer120000:
	callfunc "before_event"; // 2 minutes, spawn de montres pour patienter.
	end;

OnTimer180000:
	callfunc "before_event"; // 3 minutes, spawn de montres pour patienter.
	end;

OnTimer240000:
	callfunc "before_event"; // 4 minutes, spawn de montres pour patienter.
	end;

OnTimer300000: // 5 minutes après je fais un rappel.
	Announce "Garde Royal: Plus que 5 min. avant le Spawn Survivor de type " + $@spawn_type + ". Dépéchez-vous !",8;
	Announce "Garde Royal: Rendez-vous dans l'allée au sud de la fontaine de Prontera.",8;
	Announce "Garde Royal: Si vous arrivez en retard, vous ne pourrez pas entrer dans l'arène.",8;
	Announce "Garde Royal: Il y a déjà " + (getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20)) + " participant(s) dans l'arène.",8;
	callfunc "before_event"; // 5 minutes, spawn de montres pour patienter.
	end;

OnTimer360000:
	callfunc "before_event"; // 6 minutes, spawn de montres pour patienter.
	end;

OnTimer420000:
	callfunc "before_event"; // 7 minutes, spawn de montres pour patienter.
	end;

OnTimer480000:
	Announce "Garde Royal: Début du Spawn Survivor de type " + $@spawn_type + " dans 2 minutes. Dépéchez-vous !",8;
	Announce "Garde Royal: Rendez-vous dans l'allée au sud de la fontaine de Prontera.",8;
	Announce "Garde Royal: Si vous arrivez en retard, vous ne pourrez pas entrer dans l'arène.",8;
	Announce "Garde Royal: Déjà " + (getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20)) + " participant(s) arrivé(s) dans l'arène.",8;
	callfunc "before_event"; // 8 minutes, spawn de montres pour patienter.
	end;

OnTimer540000: // 9 minute après je refais une annonce.
	Announce "Garde Royal: Le Spawn Survivor de type " + $@spawn_type + " commence dans 1 minute. Dépéchez-vous !",8;
	Announce "Garde Royal: Rendez-vous dans l'allée au sud de la fontaine de Prontera.",8;
	mapannounce "guild_vs5.gat","Garde Royal: Participants, préparez-vous au Spawn Survivor...",0;
	// nettoyage de la place
	if (GetMapMobs("guild_vs5.gat") < 1) end;
	mapannounce "guild_vs5.gat","Garde Royal: *Nettoyage de l'arène...*",0;
	killmonsterall "guild_vs5.gat"; // destruction des monstres pour laisser une minute tranquille
	end;

OnTimer600000: // 10 minutes après on coupe l'accès.
	if (agitcheck(0) != 0) goto L_LancementWoE;
	if ((getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20)) > 1) goto L_LancementEvent; // au moins 2 joueurs...

	if ((getmapusers2("guild_vs5.gat") - getmapgms2("guild_vs5.gat",20)) == 1) goto L_un_seul_joueur;
	Announce "Garde Royal: Aucun joueur ne s'est présenté pour le Spawn Survivor. L'événement a été arrêté.",8;
	goto L_arretLancement;

L_un_seul_joueur:
	Announce "Garde Royal: Un seul joueur s'est présenté pour le Spawn Survivor. L'événement a été arrêté.",8;
	mapannounce "guild_vs5.gat","Garde Royal: Le joueur présent doit emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	goto L_arretLancement;

L_LancementWoE:
	announce "Le Spawn Survivor est arreté pour cause de WoE.",0;
	mapannounce "guild_vs5.gat","Garde Royal: Les joueurs présents doivent emprunter un warp (ou deco/reco) pour quitter l'arène. Merci.",0;
	goto L_arretLancement;

L_arretLancement:
	callfunc "close_spawn";
	stopnpctimer;
	end;

L_LancementEvent:
	stopnpctimer;
	donpcevent "Surviv::OnStart";
	end;
}
