#!/usr/bin/perl

##########################################################################
# The data backup tool of Athena
#
#	This tool backs up various *.txt data files of Athena
#
#-------------------------------------------------------------------------
# How to set up.
#  The path from the current directory to the data files and the list of
#  files are already set (correctly). Because the backup directory is not
#  automatically created, it is necessary that you create it by yourself.
#  The last "/" of the directories is necessary.
#
#  The directories can be specified by arguments. Example: ./backup ../save/ ./backup_data/
#  The last "/" of the directories is necessary.
#
#  When this tool copies the files to the backup directory, it adds to
#  the file name the current date and time.
#
#  If the backup_data directory is created in the tool directory and if
#  the line './tool/backup ./save/ ./tool/backup_data/' is added into
#  athena.sh, each time Athena is started a backup is done.
#
# * When restoring, '- r date_and_time' must be passed as argument.
#  In addition, it is also possible to add after the directories:
#  Example 1: ./backup -r 200309191607
#  Example 2: ./backup -r 200309191607 ../save ./backup_data/
#  With these examples, backup datas from 2003/09/19 16:07 are restored.
#
#  File names in Athena directory (when restoring) are changed to *.bak and files are not deleted.
#  When they become unnecessary, delete them with rm *.bak.
#
##########################################################################

$sdir="../../save/";		# source directory (The /save/ directory of Athena)
$tdir="./backup_data/";		# backup/target directory

@files=(			# List of files
	"account","athena","storage","party","guild","castle","pet"
);


#------------------------------End of setting----------------------------











if($ARGV[0]=~/^\-r$/i || $ARGV[0]=~/\-\-(recover|restore)/i){
	# Restoring process

	$file=$ARGV[1];
	$sdir=$ARGV[2]||$sdir;
	$tdir=$ARGV[3]||$tdir;
	&restorecopy($_) foreach @files;
	exit(0);
}

# Backup process
$sdir=$ARGV[0]||$sdir;
$tdir=$ARGV[1]||$tdir;

unless( -d $tdir ){
	print "$0: \"$tdir\" : No such directory.\n";
	exit(1);
}

(undef,$min,$hour,$day,$month,$year)=localtime;

$file=sprintf("%04d%02d%02d%02d%02d",
	$year+1900, $month+1, $day, $hour, $min );

&backupcopy($_) foreach @files;
exit(0);

sub backupcopy {
	my($name)= @_;
	system("cp $sdir$name.txt $tdir$name$file.txt");
}

sub restorecopy {
	my($name)= @_;
	unless( -f "$sdir$name.txt" ){
		printf("$0: \"$sdir$name.txt\" not found!\n");
		return 0;
	}
	unless( -f "$tdir$name$file.txt" ){
		printf("$0: \"$tdir$name$file.txt\" not found!\n");
		return 0;
	}
	rename "$sdir$name.txt","$sdir$name.bak";
	system("cp $tdir$name$file.txt $sdir$name.txt");
}
