//               (c)2004-2007 Freya Team Presents:              
//                 ___   ___    ___   _  _   __                 
//                (  _) (  ,)  (  _) ( \/ ) (  )                
//                (  _)  )  \   ) _)  \  /  /__\                
//                (_)   (_)\_) (___) (__/  (_)(_)               
//                    http://www.ro-freya.net                   
//--------------------------------------------------------------
//
// socket.conf
// sockets configuration file
// (c) Freya Project. 2007
//

// Do you want display debug informations of sockets?
debug: 0

// Name of configuration file of httpd.
httpd_config: conf/httpd.conf

// Set if the sockets control panel can be used with httpd (0: not used).
// The URL is defined with 'socket_ctrl_panel_url' option.
// We recommend to set access restrictions in httpd.conf.
socket_ctrl_panel: 0

// URL of sockets control panel.
socket_ctrl_panel_url: /socketctrl


// Ddos protection setting.
// If there is ddos_count number of connection requests within ddos_interval (in msec), the server will assume it is a ddos attack.

// Test intervals (in msec).
ddos_interval: 1000

// Connection frequency.
ddos_count: 5

// The time interval (in msec) which cancels connection restriction.
// After this amount of time, the connection restriction is canceled.
ddos_autoreset: 600000



// Configuration of reception restriction (excluding link and httpd).
// Transmission speed of reception is restricted in the bandwidth with recv_limit_rate_bytes (within time of recv_limit_rate_period).
// When recv_limit_rate_period is set small, the reception restriction becomes sensitive.
// Recv_limit_rate_wait_max gives the upper limit to time of the connection waiting if restriction is activated.
// If restriction continue after recv_limit_rate_disconnect limits, connection is closed.
// recv_limit_rate_enable option enables or disables reception restriction system.

// Do you want activate reception restriction (0: disabled)?
recv_limit_rate_enable: 1

// Check interval (in msec).
recv_limit_rate_period: 500

// The bandwidth (in bytes/sec) which is restricted.
recv_limit_rate_bytes: 1024

// The upper limit of the forced non-communication time (in msec) after activation of the reception restriction.
recv_limit_rate_wait_max: 2000

// If the reception restriction continues after this time (in msec), connection is closed.
// This option must be larger than recv_limit_rate_wait_max.
recv_limit_rate_disconnect: 5000



// Maximum size of the transmission buffer (excluding link and httpd).
send_limit_buffer_size: 131072



// The order of IP access restriction (the same as apache).
// 'deny,allow' IS the standard.
// TN: ------------------------------
// 'deny,allow': It's (in the order):
//   'allow' if IP is in the allow list, else
//   'deny' if IP is in the deny list, else
//   'allow' if IP is not concerned by Ddos protection.
// 'allow,deny': It's (in the order):
//   'deny' if IP is in the deny list, else
//   'allow' if IP is in the allow list, else
//   'allow' if IP is not concerned by Ddos protection.
// 'mutual-failure': It's 'allow if IP is in allow list only', otherwise 'deny'.
// TN: end -------------------------


order: deny,allow
// order: allow,deny
// order: mutual-failure

// The IP list which it uses to access controls:
// allow : to describe allow list (one allow line by IP)
// deny  : to describe deny list (one deny line by IP)
// Use 'clear' to reset a list.
// Use 'all' to set all IPs.

// allow: 127.0.0.1
// allow: 192.168.0.0/16
// allow: 10.0.0.0/255.0.0.0
// allow: all

// deny: 127.0.0.1



import: conf/import/socket_conf.txt
